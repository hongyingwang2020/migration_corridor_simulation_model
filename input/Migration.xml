<?xml version="1.0"?>
<scenario>
  <population>
    <name>Chinook</name>
    <description />
    <type>terrestrial</type>
    <affinities>
      <affinity>
        <subType>spatial</subType>
        <name>Movement Goal</name>
        <maximumSize>1</maximumSize>
        <strategy>random</strategy>
        <threshold>0</threshold>
        <group>false</group>
      </affinity>
    </affinities>
    <accumulators>
      <accumulator name="Affinity Bound [ max ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Affinity Bound [ min ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Affinity Switch" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Catch and Release [ cost ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Catch and Release [ switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Data Column" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Data Row" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Energy Density [ pre-refuge ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Energy Density [ used in refuge ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish Selector" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish Status [ motivation ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish Status [ terminus ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fishing Pressure" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ activity ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ energy ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ energy density ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ gamete energy ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ mass equivalent ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ mass used in respiration ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ temperature ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ weight ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Hours in Cold Water [ episodic ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Hours in Cold Water [ total ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Hours in CWR [ event max ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Hours in CWR [ event switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Initial Energy Density" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Initial Weight" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Locator" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement [ switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ gradient downstream ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ gradient refuge ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ gradient upstream ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ target downstream ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ target upstream ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Tally [ new ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Tally [ old ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Random Time" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Refuge Avoidance" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="River Kilometer" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Survival [ switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Survival [ temperature ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ 24 hour counter ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ 24 hour mean ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ 24 hour sum ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ at time 1 ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ at time 2 ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ at time 3 ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ mean ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Thermal Gradient [ switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ arrived at terminus ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ entry ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ exit ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ in system ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ remaining ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ spent at terminus ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time Step" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Trib and Plume ID [ post-movement ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Trib and Plume ID [ pre-movement ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
    </accumulators>
    <traits>
      <probabilisticTrait name="Affinity Status">
        <value name="Avoid Affinity Movements" init="100" birth="100" />
        <value name="OK to Move With Affinity" init="0" birth="0" />
        <description />
      </probabilisticTrait>
      <accumulatedTrait name="Affinity Switch" accumulator="Affinity Switch">
        <value name="Affinity Site Available" threshold="-INF" />
        <value name="Site Selection Failed" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Catch and Release [ switch ]" accumulator="Catch and Release [ switch ]">
        <value name="Was Not Caught" threshold="-INF" />
        <value name="Caught and Released" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Fish Selector" accumulator="Fish Selector">
        <value name="Fish Not Selected" threshold="-INF" />
        <value name="Fish Is Selected" threshold="1" />
        <description />
      </accumulatedTrait>
      <probabilisticTrait name="Fish Status [ behavior ]">
        <value name="Waiting at Estuary" init="100" birth="100" />
        <value name="Actively Migrating" init="0" birth="0" />
        <value name="Waiting at Terminus" init="0" birth="0" />
        <description />
      </probabilisticTrait>
      <accumulatedTrait name="Fish Status [ motivation ]" accumulator="Fish Status [ motivation ]">
        <value name="Not Yet Ready to Spawn" threshold="-INF" />
        <value name="Ready to Spawn Right Now" threshold="1" />
        <description />
      </accumulatedTrait>
      <probabilisticTrait name="Fish Status [ movement ]">
        <value name="Do Not Move" init="100" birth="100" />
        <value name="Move Randomly" init="0" birth="0" />
        <value name="Move to Cold Water" init="0" birth="0" />
        <value name="Move Upstream" init="0" birth="0" />
        <value name="Move Downstream" init="0" birth="0" />
        <description />
      </probabilisticTrait>
      <accumulatedTrait name="Fish Status [ terminus ]" accumulator="Fish Status [ terminus ]">
        <value name="Not at Terminus" threshold="-INF" />
        <value name="Is at Terminus" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Fish Status [ thermal ]" accumulator="Temperature [ mean ]">
        <value name="Below 16 Degrees" threshold="-INF" />
        <value name="16 Degrees" threshold="16" />
        <value name="17 Degrees" threshold="17" />
        <value name="18 Degrees" threshold="18" />
        <value name="19 Degrees" threshold="19" />
        <value name="20 Degrees" threshold="20" />
        <value name="21 Degrees" threshold="21" />
        <value name="22 Degrees" threshold="22" />
        <value name="23 Degrees" threshold="23" />
        <value name="24 Degrees" threshold="24" />
        <value name="Above 25 Degrees" threshold="24.1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Hours in Cold Water [ episodic ]" accumulator="Hours in Cold Water [ episodic ]">
        <value name="Not in a Refuge" threshold="-INF" />
        <value name="Just Arrived in Refuge" threshold="1" />
        <value name="Previously Arrived in Refuge" threshold="2" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Initial Weight" accumulator="Initial Weight">
        <value name="To Be Determined" threshold="-INF" />
        <value name="Already Specified" threshold="4000" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Movement [ switch ]" accumulator="Movement [ switch ]">
        <value name="Needs to Keep Moving" threshold="-INF" />
        <value name="Has Moved Far Enough" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Avoidance" accumulator="Refuge Avoidance">
        <value name="Not Avoiding Refuges" threshold="-INF" />
        <value name="Actively Avoiding Refuges" threshold="1" />
        <description />
      </accumulatedTrait>
      <probabilisticTrait name="Refuge History">
        <value name="Transition [ out to out ]" init="100" birth="100" />
        <value name="Transition [ out to in ]" init="0" birth="0" />
        <value name="Transition [ in to out ]" init="0" birth="0" />
        <value name="Transition [ in to in ]" init="0" birth="0" />
        <description />
      </probabilisticTrait>
      <accumulatedTrait name="Refuge ID" accumulator="Trib and Plume ID [ post-movement ]">
        <value name="Not in a Refuge" threshold="-INF" />
        <value name="Eagle Creek" threshold="0.5" />
        <value name="Rock Creek" threshold="2.5" />
        <value name="Herman Creek" threshold="4.5" />
        <value name="Wind River" threshold="6.5" />
        <value name="Little White Salmon" threshold="8.5" />
        <value name="White Salmon" threshold="10.5" />
        <value name="Klickitat River" threshold="12.5" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Status [ post-movement ]" accumulator="Trib and Plume ID [ post-movement ]">
        <value name="Presently Outside CWR" threshold="-INF" />
        <value name="Presently Inside CWR" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Status [ pre-movement ]" accumulator="Trib and Plume ID [ pre-movement ]">
        <value name="Previously Outside CWR" threshold="-INF" />
        <value name="Previously Inside CWR" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Status [ switch ]" accumulator="Hours in CWR [ event switch ]">
        <value name="Not Holding at CWR" threshold="-INF" />
        <value name="Presently Holding at CWR" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Survival [ lookup ]" accumulator="Temperature [ 24 hour mean ]">
        <value name="Row Number 0" threshold="-INF" />
        <value name="Row Number 1" threshold="20.1" />
        <value name="Row Number 2" threshold="20.2" />
        <value name="Row Number 3" threshold="20.3" />
        <value name="Row Number 4" threshold="20.4" />
        <value name="Row Number 5" threshold="20.5" />
        <value name="Row Number 6" threshold="20.6" />
        <value name="Row Number 7" threshold="20.7" />
        <value name="Row Number 8" threshold="20.8" />
        <value name="Row Number 9" threshold="20.9" />
        <value name="Row Number 10" threshold="21" />
        <value name="Row Number 11" threshold="21.1" />
        <value name="Row Number 12" threshold="21.2" />
        <value name="Row Number 13" threshold="21.3" />
        <value name="Row Number 14" threshold="21.4" />
        <value name="Row Number 15" threshold="21.5" />
        <value name="Row Number 16" threshold="21.6" />
        <value name="Row Number 17" threshold="21.7" />
        <value name="Row Number 18" threshold="21.8" />
        <value name="Row Number 19" threshold="21.9" />
        <value name="Row Number 20" threshold="22" />
        <value name="Row Number 21" threshold="22.1" />
        <value name="Row Number 22" threshold="22.2" />
        <value name="Row Number 23" threshold="22.3" />
        <value name="Row Number 24" threshold="22.4" />
        <value name="Row Number 25" threshold="22.5" />
        <value name="Row Number 26" threshold="22.6" />
        <value name="Row Number 27" threshold="22.7" />
        <value name="Row Number 28" threshold="22.8" />
        <value name="Row Number 29" threshold="22.9" />
        <value name="Row Number 30" threshold="23" />
        <value name="Row Number 31" threshold="23.1" />
        <value name="Row Number 32" threshold="23.2" />
        <value name="Row Number 33" threshold="23.3" />
        <value name="Row Number 34" threshold="23.4" />
        <value name="Row Number 35" threshold="23.5" />
        <value name="Row Number 36" threshold="23.6" />
        <value name="Row Number 37" threshold="23.7" />
        <value name="Row Number 38" threshold="23.8" />
        <value name="Row Number 39" threshold="23.9" />
        <value name="Row Number 40" threshold="24" />
        <value name="Row Number 41" threshold="24.1" />
        <value name="Row Number 42" threshold="24.2" />
        <value name="Row Number 43" threshold="24.3" />
        <value name="Row Number 44" threshold="24.4" />
        <value name="Row Number 45" threshold="24.5" />
        <value name="Row Number 46" threshold="24.6" />
        <value name="Row Number 47" threshold="24.7" />
        <value name="Row Number 48" threshold="24.8" />
        <value name="Row Number 49" threshold="24.9" />
        <value name="Row Number 50" threshold="25" />
        <value name="Row Number 51" threshold="25.1" />
        <value name="Row Number 52" threshold="25.2" />
        <value name="Row Number 53" threshold="25.3" />
        <value name="Row Number 54" threshold="25.4" />
        <value name="Row Number 55" threshold="25.5" />
        <value name="Row Number 56" threshold="25.6" />
        <value name="Row Number 57" threshold="25.7" />
        <value name="Row Number 58" threshold="25.8" />
        <value name="Row Number 59" threshold="25.9" />
        <value name="Row Number 60" threshold="26" />
        <value name="Row Number 61" threshold="26.1" />
        <value name="Row Number 62" threshold="26.2" />
        <value name="Row Number 63" threshold="26.3" />
        <value name="Row Number 64" threshold="26.4" />
        <value name="Row Number 65" threshold="26.5" />
        <value name="Row Number 66" threshold="26.6" />
        <value name="Row Number 67" threshold="26.7" />
        <value name="Row Number 68" threshold="26.8" />
        <value name="Row Number 69" threshold="26.9" />
        <value name="Row Number 70" threshold="27" />
        <value name="Row Number 71" threshold="27.1" />
        <value name="Row Number 72" threshold="27.2" />
        <value name="Row Number 73" threshold="27.3" />
        <value name="Row Number 74" threshold="27.4" />
        <value name="Row Number 75" threshold="27.5" />
        <value name="Row Number 76" threshold="27.6" />
        <value name="Row Number 77" threshold="27.7" />
        <value name="Row Number 78" threshold="27.8" />
        <value name="Row Number 79" threshold="27.9" />
        <value name="Row Number 80" threshold="28" />
        <value name="Row Number 81" threshold="28.1" />
        <value name="Row Number 82" threshold="28.2" />
        <value name="Row Number 83" threshold="28.3" />
        <value name="Row Number 84" threshold="28.4" />
        <value name="Row Number 85" threshold="28.5" />
        <value name="Row Number 86" threshold="28.6" />
        <value name="Row Number 87" threshold="28.7" />
        <value name="Row Number 88" threshold="28.8" />
        <value name="Row Number 89" threshold="28.9" />
        <value name="Row Number 90" threshold="29" />
        <value name="Row Number 91" threshold="29.1" />
        <value name="Row Number 92" threshold="29.2" />
        <value name="Row Number 93" threshold="29.3" />
        <value name="Row Number 94" threshold="29.4" />
        <value name="Row Number 95" threshold="29.5" />
        <value name="Row Number 96" threshold="29.6" />
        <value name="Row Number 97" threshold="29.7" />
        <value name="Row Number 98" threshold="29.8" />
        <value name="Row Number 99" threshold="29.9" />
        <value name="Row Number 100" threshold="30" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Survival [ switch ]" accumulator="Survival [ switch ]">
        <value name="Will Die" threshold="-INF" />
        <value name="Will Live" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Temperature [ 24 hour counter ]" accumulator="Temperature [ 24 hour counter ]">
        <value name="Less Than 24 Hours" threshold="-INF" />
        <value name="At 24 Hours" threshold="24" />
        <value name="Greater Than 24 Hours" threshold="25" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Thermal Gradient" accumulator="Thermal Gradient [ switch ]">
        <value name="Thermal Gradient Detectable" threshold="-INF" />
        <value name="Thermal Gradient Not Detectable" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Time [ at terminus ]" accumulator="Time [ spent at terminus ]">
        <value name="Not There Yet" threshold="-INF" />
        <value name="Just Got There" threshold="1" />
        <value name="Got There Previously" threshold="2" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Time [ entry ]" accumulator="Time [ entry ]">
        <value name="To Be Determined" threshold="-INF" />
        <value name="Already Specified" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Time [ in system ]" accumulator="Time [ in system ]">
        <value name="Has Not Started Moving" threshold="-INF" />
        <value name="Started Moving this Time Step" threshold="1" />
        <value name="Was Previously Moving" threshold="2" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Trib and Plume ID" accumulator="Trib and Plume ID [ post-movement ]">
        <value name="Not in a Refuge" threshold="-INF" />
        <value name="Eagle Creek" threshold="0.5" />
        <value name="Eagle Creek Plume" threshold="1.5" />
        <value name="Rock Creek" threshold="2.5" />
        <value name="Rock Creek Plume" threshold="3.5" />
        <value name="Herman Creek" threshold="4.5" />
        <value name="Herman Creek Plume" threshold="5.5" />
        <value name="Wind River" threshold="6.5" />
        <value name="Wind River Plume" threshold="7.5" />
        <value name="Little White Salmon" threshold="8.5" />
        <value name="Little White Salmon Plume" threshold="9.5" />
        <value name="White Salmon" threshold="10.5" />
        <value name="White Salmon Plume" threshold="11.5" />
        <value name="Klickitat River" threshold="12.5" />
        <value name="Klickitat Plume" threshold="13.5" />
        <description />
      </accumulatedTrait>
    </traits>
    <initialSize>0</initialSize>
    <initializationSpatialData />
    <exclusionLayer>River [ extent ]</exclusionLayer>
    <excludeIfZero>true</excludeIfZero>
    <rangeParameters>
      <resourcesTarget>0</resourcesTarget>
      <rangeThreshold>0</rangeThreshold>
      <maxIndivInGroup>1</maxIndivInGroup>
      <maxRangeDistance>0</maxRangeDistance>
      <maxRangeHectares>0.05000000000000001</maxRangeHectares>
      <rangeSpatialData>River [ extent ]</rangeSpatialData>
      <minRangeResource>0</minRangeResource>
      <floaterResourceFraction>0</floaterResourceFraction>
      <resourceTargets>
        <trait>Fish Status [ movement ]</trait>
        <rank>0 0 0 0 0</rank>
        <target>0 0 0 0 0</target>
      </resourceTargets>
      <isCompetitive>false</isCompetitive>
      <competitiveFraction>0</competitiveFraction>
    </rangeParameters>
  </population>
  <population>
    <name>Iterator</name>
    <description />
    <type>terrestrial</type>
    <accumulators>
      <accumulator name="Downstream Iterator [ chinook ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Downstream Iterator [ steelhead ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Refuge Iterator [ chinook ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Refuge Iterator [ steelhead ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Termination Switch" lowerBound="1" upperBound="1" birthLower="0" birthUpper="0" holdsId="False" inherit="True">
        <description />
      </accumulator>
      <accumulator name="Upstream Iterator [ chinook ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Upstream Iterator [ steelhead ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
    </accumulators>
    <traits>
      <accumulatedTrait name="Termination Switch" accumulator="Termination Switch">
        <value name="Terminate Simulation" threshold="-INF" />
        <value name="Do Not Terminate" threshold="1" />
        <description />
      </accumulatedTrait>
    </traits>
    <initialSize>1</initialSize>
    <initializationSpatialData>Gradient [ downstream ]</initializationSpatialData>
    <rangeParameters>
      <resourcesTarget>0</resourcesTarget>
      <rangeThreshold>0</rangeThreshold>
      <maxIndivInGroup>1</maxIndivInGroup>
      <maxRangeDistance>0</maxRangeDistance>
      <maxRangeHectares>0.049999941146678009</maxRangeHectares>
      <rangeSpatialData>Gradient [ downstream ]</rangeSpatialData>
      <minRangeResource>0</minRangeResource>
      <floaterResourceFraction>0</floaterResourceFraction>
      <resourceTargets>
        <trait>Termination Switch</trait>
        <rank>0 0</rank>
        <target>0 0</target>
      </resourceTargets>
      <isCompetitive>false</isCompetitive>
      <competitiveFraction>0</competitiveFraction>
    </rangeParameters>
  </population>
  <population>
    <name>Refuges</name>
    <description />
    <type>terrestrial</type>
    <accumulators>
      <accumulator name="Current Refuge Density" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Effective Volume [ chinook ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Effective Volume [ steelhead ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish Removed [ chinook ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish Removed [ steelhead ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish to Remove [ chinook ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish to Remove [ steelhead ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish to Retain [ chinook ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish to Retain [ steelhead ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Number of Fish [ chinook ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Number of Fish [ steelhead ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Number of Fish [ total ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Refuge Density Index" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Refuge Depth [ chinook ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Refuge Depth [ steelhead ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Refuge ID" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
    </accumulators>
    <traits>
      <accumulatedTrait name="Effective Volume [ chinook ]" accumulator="Effective Volume [ chinook ]">
        <value name="Refuge Not Usable for Chinook" threshold="-INF" />
        <value name="Refuge Is Usable for Chinook" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Effective Volume [ steelhead ]" accumulator="Effective Volume [ steelhead ]">
        <value name="Refuge Not Usable for Steelhead" threshold="-INF" />
        <value name="Refuge Is Usable for Steelhead" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Fish to Remove [ chinook ]" accumulator="Fish to Remove [ chinook ]">
        <value name="No Chinook to Remove" threshold="-INF" />
        <value name="Some Chinook to Remove" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Fish to Remove [ steelhead ]" accumulator="Fish to Remove [ steelhead ]">
        <value name="No Steelhead to Remove" threshold="-INF" />
        <value name="Some Steelhead to Remove" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Number of Fish [ chinook ]" accumulator="Number of Fish [ chinook ]">
        <value name="No Chinook in Refuge" threshold="-INF" />
        <value name="Some Chinook in Refuge" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Number of Fish [ steelhead ]" accumulator="Number of Fish [ steelhead ]">
        <value name="No Steelhead in Refuge" threshold="-INF" />
        <value name="Some Steelhead in Refuge" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Density Switch" accumulator="Refuge Density Index">
        <value name="Below Maximum Density" threshold="-INF" />
        <value name="Above Maximum Density" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge ID" accumulator="Refuge ID">
        <value name="Refuge 1" threshold="-INF" />
        <value name="Refuge 2" threshold="2" />
        <value name="Refuge 3" threshold="3" />
        <value name="Refuge 4" threshold="4" />
        <value name="Refuge 5" threshold="5" />
        <value name="Refuge 6" threshold="6" />
        <value name="Refuge 7" threshold="7" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Occupancy" accumulator="Number of Fish [ total ]">
        <value name="Refuge Empty" threshold="-INF" />
        <value name="Refuge Occupied" threshold="1" />
        <description />
      </accumulatedTrait>
    </traits>
    <initialSize>0</initialSize>
    <initializationSpatialData />
    <rangeParameters>
      <resourcesTarget>0</resourcesTarget>
      <rangeThreshold>0</rangeThreshold>
      <maxIndivInGroup>1</maxIndivInGroup>
      <maxRangeDistance>0</maxRangeDistance>
      <maxRangeHectares>0.05000000000000001</maxRangeHectares>
      <rangeSpatialData>Special Sites [ refuges ]</rangeSpatialData>
      <minRangeResource>0</minRangeResource>
      <floaterResourceFraction>0</floaterResourceFraction>
      <resourceTargets>
        <trait>Refuge Density Switch</trait>
        <rank>0 0</rank>
        <target>0 0</target>
      </resourceTargets>
      <isCompetitive>false</isCompetitive>
      <competitiveFraction>0</competitiveFraction>
    </rangeParameters>
  </population>
  <population>
    <name>Steelhead</name>
    <description />
    <type>terrestrial</type>
    <affinities>
      <affinity>
        <subType>spatial</subType>
        <name>Movement Goal</name>
        <maximumSize>1</maximumSize>
        <strategy>random</strategy>
        <threshold>0</threshold>
        <group>false</group>
      </affinity>
    </affinities>
    <accumulators>
      <accumulator name="Affinity Bound [ max ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Affinity Bound [ min ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Affinity Switch" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Catch and Release [ cost ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Catch and Release [ switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Data Column" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Data Row" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Energy Density [ pre-refuge ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Energy Density [ used in refuge ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish Selector" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish Status [ motivation ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fish Status [ terminus ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fishing Pressure" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ activity ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ energy ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ energy density ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ gamete energy ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ mass equivalent ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ mass used in respiration ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ temperature ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Fitness [ weight ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Hours in Cold Water [ episodic ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Hours in Cold Water [ total ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Hours in CWR [ event max ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Hours in CWR [ event switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Initial Energy Density" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Initial Weight" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Locator" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement [ switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ gradient downstream ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ gradient refuge ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ gradient upstream ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ target downstream ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Distance [ target upstream ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Tally [ new ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Movement Tally [ old ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Random Time" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Refuge Avoidance" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="River Kilometer" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Survival [ switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Survival [ temperature ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ 24 hour counter ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ 24 hour mean ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ 24 hour sum ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ at time 1 ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ at time 2 ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ at time 3 ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Temperature [ mean ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Thermal Gradient [ switch ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ arrived at terminus ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ entry ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ exit ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ in system ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ remaining ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time [ spent at terminus ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Time Step" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Trib and Plume ID [ post-movement ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
      <accumulator name="Trib and Plume ID [ pre-movement ]" lowerBound="0" upperBound="0" birthLower="0" birthUpper="0" holdsId="False" inherit="False">
        <description />
      </accumulator>
    </accumulators>
    <traits>
      <probabilisticTrait name="Affinity Status">
        <value name="Avoid Affinity Movements" init="100" birth="100" />
        <value name="OK to Move With Affinity" init="0" birth="0" />
        <description />
      </probabilisticTrait>
      <accumulatedTrait name="Affinity Switch" accumulator="Affinity Switch">
        <value name="Affinity Site Available" threshold="-INF" />
        <value name="Site Selection Failed" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Catch and Release [ switch ]" accumulator="Catch and Release [ switch ]">
        <value name="Was Not Caught" threshold="-INF" />
        <value name="Caught and Released" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Fish Selector" accumulator="Fish Selector">
        <value name="Fish Not Selected" threshold="-INF" />
        <value name="Fish Is Selected" threshold="1" />
        <description />
      </accumulatedTrait>
      <probabilisticTrait name="Fish Status [ behavior ]">
        <value name="Waiting at Estuary" init="100" birth="100" />
        <value name="Actively Migrating" init="0" birth="0" />
        <value name="Waiting at Terminus" init="0" birth="0" />
        <description />
      </probabilisticTrait>
      <accumulatedTrait name="Fish Status [ motivation ]" accumulator="Fish Status [ motivation ]">
        <value name="Not Yet Ready to Spawn" threshold="-INF" />
        <value name="Ready to Spawn Right Now" threshold="1" />
        <description />
      </accumulatedTrait>
      <probabilisticTrait name="Fish Status [ movement ]">
        <value name="Do Not Move" init="100" birth="100" />
        <value name="Move Randomly" init="0" birth="0" />
        <value name="Move to Cold Water" init="0" birth="0" />
        <value name="Move Upstream" init="0" birth="0" />
        <value name="Move Downstream" init="0" birth="0" />
        <description />
      </probabilisticTrait>
      <accumulatedTrait name="Fish Status [ terminus ]" accumulator="Fish Status [ terminus ]">
        <value name="Not at Terminus" threshold="-INF" />
        <value name="Is at Terminus" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Fish Status [ thermal ]" accumulator="Temperature [ mean ]">
        <value name="Below 16 Degrees" threshold="-INF" />
        <value name="16 Degrees" threshold="16" />
        <value name="17 Degrees" threshold="17" />
        <value name="18 Degrees" threshold="18" />
        <value name="19 Degrees" threshold="19" />
        <value name="20 Degrees" threshold="20" />
        <value name="21 Degrees" threshold="21" />
        <value name="22 Degrees" threshold="22" />
        <value name="23 Degrees" threshold="23" />
        <value name="24 Degrees" threshold="24" />
        <value name="Above 25 Degrees" threshold="24.1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Hours in Cold Water [ episodic ]" accumulator="Hours in Cold Water [ episodic ]">
        <value name="Not in a Refuge" threshold="-INF" />
        <value name="Just Arrived in Refuge" threshold="1" />
        <value name="Previously Arrived in Refuge" threshold="2" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Initial Weight" accumulator="Initial Weight">
        <value name="To Be Determined" threshold="-INF" />
        <value name="Already Specified" threshold="4000" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Movement [ switch ]" accumulator="Movement [ switch ]">
        <value name="Needs to Keep Moving" threshold="-INF" />
        <value name="Has Moved Far Enough" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Avoidance" accumulator="Refuge Avoidance">
        <value name="Not Avoiding Refuges" threshold="-INF" />
        <value name="Actively Avoiding Refuges" threshold="1" />
        <description />
      </accumulatedTrait>
      <probabilisticTrait name="Refuge History">
        <value name="Transition [ out to out ]" init="100" birth="100" />
        <value name="Transition [ out to in ]" init="0" birth="0" />
        <value name="Transition [ in to out ]" init="0" birth="0" />
        <value name="Transition [ in to in ]" init="0" birth="0" />
        <description />
      </probabilisticTrait>
      <accumulatedTrait name="Refuge ID" accumulator="Trib and Plume ID [ post-movement ]">
        <value name="Not in a Refuge" threshold="-INF" />
        <value name="Eagle Creek" threshold="0.5" />
        <value name="Rock Creek" threshold="2.5" />
        <value name="Herman Creek" threshold="4.5" />
        <value name="Wind River" threshold="6.5" />
        <value name="Little White Salmon" threshold="8.5" />
        <value name="White Salmon" threshold="10.5" />
        <value name="Klickitat River" threshold="12.5" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Status [ post-movement ]" accumulator="Trib and Plume ID [ post-movement ]">
        <value name="Presently Outside CWR" threshold="-INF" />
        <value name="Presently Inside CWR" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Status [ pre-movement ]" accumulator="Trib and Plume ID [ pre-movement ]">
        <value name="Previously Outside CWR" threshold="-INF" />
        <value name="Previously Inside CWR" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Refuge Status [ switch ]" accumulator="Hours in CWR [ event switch ]">
        <value name="Not Holding at CWR" threshold="-INF" />
        <value name="Presently Holding at CWR" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Survival [ lookup ]" accumulator="Temperature [ 24 hour mean ]">
        <value name="Row Number 0" threshold="-INF" />
        <value name="Row Number 1" threshold="20.1" />
        <value name="Row Number 2" threshold="20.2" />
        <value name="Row Number 3" threshold="20.3" />
        <value name="Row Number 4" threshold="20.4" />
        <value name="Row Number 5" threshold="20.5" />
        <value name="Row Number 6" threshold="20.6" />
        <value name="Row Number 7" threshold="20.7" />
        <value name="Row Number 8" threshold="20.8" />
        <value name="Row Number 9" threshold="20.9" />
        <value name="Row Number 10" threshold="21" />
        <value name="Row Number 11" threshold="21.1" />
        <value name="Row Number 12" threshold="21.2" />
        <value name="Row Number 13" threshold="21.3" />
        <value name="Row Number 14" threshold="21.4" />
        <value name="Row Number 15" threshold="21.5" />
        <value name="Row Number 16" threshold="21.6" />
        <value name="Row Number 17" threshold="21.7" />
        <value name="Row Number 18" threshold="21.8" />
        <value name="Row Number 19" threshold="21.9" />
        <value name="Row Number 20" threshold="22" />
        <value name="Row Number 21" threshold="22.1" />
        <value name="Row Number 22" threshold="22.2" />
        <value name="Row Number 23" threshold="22.3" />
        <value name="Row Number 24" threshold="22.4" />
        <value name="Row Number 25" threshold="22.5" />
        <value name="Row Number 26" threshold="22.6" />
        <value name="Row Number 27" threshold="22.7" />
        <value name="Row Number 28" threshold="22.8" />
        <value name="Row Number 29" threshold="22.9" />
        <value name="Row Number 30" threshold="23" />
        <value name="Row Number 31" threshold="23.1" />
        <value name="Row Number 32" threshold="23.2" />
        <value name="Row Number 33" threshold="23.3" />
        <value name="Row Number 34" threshold="23.4" />
        <value name="Row Number 35" threshold="23.5" />
        <value name="Row Number 36" threshold="23.6" />
        <value name="Row Number 37" threshold="23.7" />
        <value name="Row Number 38" threshold="23.8" />
        <value name="Row Number 39" threshold="23.9" />
        <value name="Row Number 40" threshold="24" />
        <value name="Row Number 41" threshold="24.1" />
        <value name="Row Number 42" threshold="24.2" />
        <value name="Row Number 43" threshold="24.3" />
        <value name="Row Number 44" threshold="24.4" />
        <value name="Row Number 45" threshold="24.5" />
        <value name="Row Number 46" threshold="24.6" />
        <value name="Row Number 47" threshold="24.7" />
        <value name="Row Number 48" threshold="24.8" />
        <value name="Row Number 49" threshold="24.9" />
        <value name="Row Number 50" threshold="25" />
        <value name="Row Number 51" threshold="25.1" />
        <value name="Row Number 52" threshold="25.2" />
        <value name="Row Number 53" threshold="25.3" />
        <value name="Row Number 54" threshold="25.4" />
        <value name="Row Number 55" threshold="25.5" />
        <value name="Row Number 56" threshold="25.6" />
        <value name="Row Number 57" threshold="25.7" />
        <value name="Row Number 58" threshold="25.8" />
        <value name="Row Number 59" threshold="25.9" />
        <value name="Row Number 60" threshold="26" />
        <value name="Row Number 61" threshold="26.1" />
        <value name="Row Number 62" threshold="26.2" />
        <value name="Row Number 63" threshold="26.3" />
        <value name="Row Number 64" threshold="26.4" />
        <value name="Row Number 65" threshold="26.5" />
        <value name="Row Number 66" threshold="26.6" />
        <value name="Row Number 67" threshold="26.7" />
        <value name="Row Number 68" threshold="26.8" />
        <value name="Row Number 69" threshold="26.9" />
        <value name="Row Number 70" threshold="27" />
        <value name="Row Number 71" threshold="27.1" />
        <value name="Row Number 72" threshold="27.2" />
        <value name="Row Number 73" threshold="27.3" />
        <value name="Row Number 74" threshold="27.4" />
        <value name="Row Number 75" threshold="27.5" />
        <value name="Row Number 76" threshold="27.6" />
        <value name="Row Number 77" threshold="27.7" />
        <value name="Row Number 78" threshold="27.8" />
        <value name="Row Number 79" threshold="27.9" />
        <value name="Row Number 80" threshold="28" />
        <value name="Row Number 81" threshold="28.1" />
        <value name="Row Number 82" threshold="28.2" />
        <value name="Row Number 83" threshold="28.3" />
        <value name="Row Number 84" threshold="28.4" />
        <value name="Row Number 85" threshold="28.5" />
        <value name="Row Number 86" threshold="28.6" />
        <value name="Row Number 87" threshold="28.7" />
        <value name="Row Number 88" threshold="28.8" />
        <value name="Row Number 89" threshold="28.9" />
        <value name="Row Number 90" threshold="29" />
        <value name="Row Number 91" threshold="29.1" />
        <value name="Row Number 92" threshold="29.2" />
        <value name="Row Number 93" threshold="29.3" />
        <value name="Row Number 94" threshold="29.4" />
        <value name="Row Number 95" threshold="29.5" />
        <value name="Row Number 96" threshold="29.6" />
        <value name="Row Number 97" threshold="29.7" />
        <value name="Row Number 98" threshold="29.8" />
        <value name="Row Number 99" threshold="29.9" />
        <value name="Row Number 100" threshold="30" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Survival [ switch ]" accumulator="Survival [ switch ]">
        <value name="Will Die" threshold="-INF" />
        <value name="Will Live" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Temperature [ 24 hour counter ]" accumulator="Temperature [ 24 hour counter ]">
        <value name="Less Than 24 Hours" threshold="-INF" />
        <value name="At 24 Hours" threshold="24" />
        <value name="Greater Than 24 Hours" threshold="25" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Thermal Gradient" accumulator="Thermal Gradient [ switch ]">
        <value name="Thermal Gradient Detectable" threshold="-INF" />
        <value name="Thermal Gradient Not Detectable" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Time [ at terminus ]" accumulator="Time [ spent at terminus ]">
        <value name="Not There Yet" threshold="-INF" />
        <value name="Just Got There" threshold="1" />
        <value name="Got There Previously" threshold="2" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Time [ entry ]" accumulator="Time [ entry ]">
        <value name="To Be Determined" threshold="-INF" />
        <value name="Already Specified" threshold="1" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Time [ in system ]" accumulator="Time [ in system ]">
        <value name="Has Not Started Moving" threshold="-INF" />
        <value name="Started Moving this Time Step" threshold="1" />
        <value name="Was Previously Moving" threshold="2" />
        <description />
      </accumulatedTrait>
      <accumulatedTrait name="Trib and Plume ID" accumulator="Trib and Plume ID [ post-movement ]">
        <value name="Not in a Refuge" threshold="-INF" />
        <value name="Eagle Creek" threshold="0.5" />
        <value name="Eagle Creek Plume" threshold="1.5" />
        <value name="Rock Creek" threshold="2.5" />
        <value name="Rock Creek Plume" threshold="3.5" />
        <value name="Herman Creek" threshold="4.5" />
        <value name="Herman Creek Plume" threshold="5.5" />
        <value name="Wind River" threshold="6.5" />
        <value name="Wind River Plume" threshold="7.5" />
        <value name="Little White Salmon" threshold="8.5" />
        <value name="Little White Salmon Plume" threshold="9.5" />
        <value name="White Salmon" threshold="10.5" />
        <value name="White Salmon Plume" threshold="11.5" />
        <value name="Klickitat River" threshold="12.5" />
        <value name="Klickitat Plume" threshold="13.5" />
        <description />
      </accumulatedTrait>
    </traits>
    <initialSize>0</initialSize>
    <initializationSpatialData />
    <exclusionLayer>River [ extent ]</exclusionLayer>
    <excludeIfZero>true</excludeIfZero>
    <rangeParameters>
      <resourcesTarget>0</resourcesTarget>
      <rangeThreshold>0</rangeThreshold>
      <maxIndivInGroup>1</maxIndivInGroup>
      <maxRangeDistance>0</maxRangeDistance>
      <maxRangeHectares>0.05000000000000001</maxRangeHectares>
      <rangeSpatialData>River [ extent ]</rangeSpatialData>
      <minRangeResource>0</minRangeResource>
      <floaterResourceFraction>0</floaterResourceFraction>
      <resourceTargets>
        <trait>Fish Status [ movement ]</trait>
        <rank>0 0 0 0 0</rank>
        <target>0 0 0 0 0</target>
      </resourceTargets>
      <isCompetitive>false</isCompetitive>
      <competitiveFraction>0</competitiveFraction>
    </rangeParameters>
  </population>
  <event timestep="1">
    <eventGroupEvent>
      <name>Initialize Refuge Population</name>
      <description />
      <qualifiedName>Event Group ( Initialize Refuge Population )</qualifiedName>
      <populationName />
      <permanent>false</permanent>
      <iterations>1</iterations>
      <event>
        <patchIntroductionEvent>
          <name>Add Refuge Population</name>
          <description />
          <qualifiedName>Patch Introduction ( Add Refuge Population )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <patchSpatialData>Special Sites [ refuges ]</patchSpatialData>
          <formGroups>False</formGroups>
        </patchIntroductionEvent>
      </event>
      <event>
        <accumulateEvent>
          <name>Set Refuge ID</name>
          <description />
          <qualifiedName>Accumulate ( Set Refuge ID )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Refuge ID</accumulator>
            <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
            <accumulateSpatialData>Special Sites [ refuges ]</accumulateSpatialData>
          </updaterFunction>
        </accumulateEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Build Modified Gradient Maps</name>
          <description />
          <qualifiedName>Event Group ( Build Modified Gradient Maps )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <persistHexmapEvent>
              <name>Build Modified Gradient Map [ edge ]</name>
              <description />
              <qualifiedName>Generated Hexmap ( Build Modified Gradient Map [ edge ] )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <hexmapName>Modified Gradient Map [ edge ]</hexmapName>
              <persistHexmapGenerator>
                <expression>Cond ( h1 - ( 'Edge Gradient Threshold' - 1 ) , h1 * 99 / ( max1 - 'Edge Gradient Threshold' ) + 1 - 99 * 'Edge Gradient Threshold' / ( max1 - 'Edge Gradient Threshold' ) , 0 )</expression>
                <hexMapName>Gradient [ distance to edge ]</hexMapName>
              </persistHexmapGenerator>
              <saveFrequency>1</saveFrequency>
            </persistHexmapEvent>
          </event>
          <event>
            <persistHexmapEvent>
              <name>Build Modified Gradient Map [ upstream ]</name>
              <description />
              <qualifiedName>Generated Hexmap ( Build Modified Gradient Map [ upstream ] )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <hexmapName>Modified Gradient Map [ upstream ]</hexmapName>
              <persistHexmapGenerator>
                <expression>Cond ( h1 - ( 'Edge Gradient Threshold' - 1 ) , h2 , 0 )</expression>
                <hexMapName>Gradient [ distance to edge ]</hexMapName>
                <hexMapName>Gradient [ upstream ]</hexMapName>
              </persistHexmapGenerator>
              <saveFrequency>1</saveFrequency>
            </persistHexmapEvent>
          </event>
          <event>
            <persistHexmapEvent>
              <name>Build Modified Gradient Map [ downstream ]</name>
              <description />
              <qualifiedName>Generated Hexmap ( Build Modified Gradient Map [ downstream ] )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <hexmapName>Modified Gradient Map [ downstream ]</hexmapName>
              <persistHexmapGenerator>
                <expression>Cond ( h1 - ( 'Edge Gradient Threshold' - 1 ) , h2 , 0 )</expression>
                <hexMapName>Gradient [ distance to edge ]</hexMapName>
                <hexMapName>Gradient [ downstream ]</hexMapName>
              </persistHexmapGenerator>
              <saveFrequency>1</saveFrequency>
            </persistHexmapEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Compute Effective Volumes [ chinook ]</name>
          <description />
          <qualifiedName>Event Group ( Compute Effective Volumes [ chinook ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <persistHexmapEvent>
              <name>Build Modified Depth Map</name>
              <description />
              <qualifiedName>Generated Hexmap ( Build Modified Depth Map )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <hexmapName>Modified Depth Map [ chinook ]</hexmapName>
              <persistHexmapGenerator>
                <expression>Cond ( h1 - 'Minimum Depth [ chinook ]' , h1 , 0 )</expression>
                <hexMapName>River [ depth ]</hexMapName>
              </persistHexmapGenerator>
              <saveFrequency>1</saveFrequency>
            </persistHexmapEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Compute Effective Volumes</name>
              <description />
              <qualifiedName>Accumulate ( Compute Effective Volumes )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Refuges</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Refuge Depth [ chinook ]</accumulator>
                <function>HexSimDomain.ExploredRunningSumUpdaterFunction</function>
                <parameter>1</parameter>
                <accumulateSpatialData>Modified Depth Map [ chinook ]</accumulateSpatialData>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Effective Volume [ chinook ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>'Hexagon Area' * "Refuge Depth [ chinook ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <persistHexmapEvent>
              <name>Map Effective Volumes</name>
              <description />
              <qualifiedName>Generated Hexmap ( Map Effective Volumes )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <hexmapName>Effective Volume Map [ chinook ]</hexmapName>
              <persistHexmapGenerator>
                <expression>Cond ( h2 , h3 , Cond ( h1 + 1 , -2 , -1 ) )</expression>
                <hexMapName>Study Area</hexMapName>
                <hexMapName>Special Sites [ refuges ]</hexMapName>
                <hexMapName>Refuges:accumulatorExplored:Effective Volume [ chinook ]</hexMapName>
              </persistHexmapGenerator>
              <saveFrequency>1</saveFrequency>
            </persistHexmapEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Compute Effective Volumes [ steelhead ]</name>
          <description />
          <qualifiedName>Event Group ( Compute Effective Volumes [ steelhead ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <persistHexmapEvent>
              <name>Build Modified Depth Map</name>
              <description />
              <qualifiedName>Generated Hexmap ( Build Modified Depth Map )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <hexmapName>Modified Depth Map [ steelhead ]</hexmapName>
              <persistHexmapGenerator>
                <expression>Cond ( h1 - 'Minimum Depth [ steelhead ]' , h1 , 0 )</expression>
                <hexMapName>River [ depth ]</hexMapName>
              </persistHexmapGenerator>
              <saveFrequency>1</saveFrequency>
            </persistHexmapEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Compute Effective Volumes</name>
              <description />
              <qualifiedName>Accumulate ( Compute Effective Volumes )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Refuges</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Refuge Depth [ steelhead ]</accumulator>
                <function>HexSimDomain.ExploredRunningSumUpdaterFunction</function>
                <parameter>1</parameter>
                <accumulateSpatialData>Modified Depth Map [ steelhead ]</accumulateSpatialData>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Effective Volume [ steelhead ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>'Hexagon Area' * "Refuge Depth [ steelhead ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <persistHexmapEvent>
              <name>Map Effective Volumes</name>
              <description />
              <qualifiedName>Generated Hexmap ( Map Effective Volumes )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <hexmapName>Effective Volume Map [ steelhead ]</hexmapName>
              <persistHexmapGenerator>
                <expression>Cond ( h2 , h3 , Cond ( h1 + 1 , -2 , -1 ) )</expression>
                <hexMapName>Study Area</hexMapName>
                <hexMapName>Special Sites [ refuges ]</hexMapName>
                <hexMapName>Refuges:accumulatorExplored:Effective Volume [ steelhead ]</hexMapName>
              </persistHexmapGenerator>
              <saveFrequency>1</saveFrequency>
            </persistHexmapEvent>
          </event>
        </eventGroupEvent>
      </event>
    </eventGroupEvent>
  </event>
  <event timestep="1">
    <eventGroupEvent>
      <name>Initialize Fish Populations</name>
      <description />
      <qualifiedName>Event Group ( Initialize Fish Populations )</qualifiedName>
      <populationName />
      <permanent>false</permanent>
      <iterations>1</iterations>
      <event>
        <eventGroupEvent>
          <name>Add Initial Population [ chinook ]</name>
          <description />
          <qualifiedName>Event Group ( Add Initial Population [ chinook ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <introductionEvent>
              <name>Add Fish to Estuary</name>
              <description />
              <qualifiedName>Introduction ( Add Fish to Estuary )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <initialSize>9065</initialSize>
              <initializeForStreamNetworks>false</initializeForStreamNetworks>
              <initializationSpatialData>Special Sites [ initialization ]</initializationSpatialData>
            </introductionEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Ending Conditions</name>
              <description />
              <qualifiedName>Accumulate ( Set Ending Conditions )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Time [ exit ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Floor ( Max ( 2000 , 258 * GasDev() + 2568 ) + 0.5 )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Set Initial Weight</name>
              <description />
              <qualifiedName>Event Group ( Set Initial Weight )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Initial Weight</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Initial Weight )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Initial Weight</trait>
                    <traitCombinations>1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Initial Weight</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>1500 * GasDev( ) + 7900</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Initial Weight</trait>
                    <traitCombinations>0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Fitness [ weight ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Initial Weight"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <traitCombinations>1 0</traitCombinations>
              <trait>Initial Weight</trait>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Set Time of Entry</name>
              <description />
              <qualifiedName>Event Group ( Set Time of Entry )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Time of Entry</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Time of Entry )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Time [ entry ]</trait>
                    <traitCombinations>1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Random Time</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Floor ( GasDev() * 258 + 1752 + 0.5 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Time [ entry ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Time [ exit ]" - "Random Time" - 240 , "Random Time" , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <traitCombinations>1 0</traitCombinations>
              <trait>Time [ entry ]</trait>
            </eventGroupEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Fix Broken Weights and Times</name>
              <description />
              <qualifiedName>Accumulate ( Fix Broken Weights and Times )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Time [ entry ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Cond ( "Time [ entry ]" - 'Latest Time of Entry' , 'Latest Time of Entry' , "Time [ entry ]" )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Initial Weight</trait>
                <traitCombinations>1 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Initial Weight</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>7900</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
              <!--Stratified Updater Functions Group 1-->
              <stratifiedUpdaterFunctions>
                <trait>Initial Weight</trait>
                <traitCombinations>0 1</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ weight ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>"Initial Weight"</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
              <!--Stratified Updater Functions Group 2-->
              <stratifiedUpdaterFunctions>
                <trait>Time [ entry ]</trait>
                <traitCombinations>1 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Time [ entry ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>1752</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Initial Energy Parameters</name>
              <description />
              <qualifiedName>Accumulate ( Set Initial Energy Parameters )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Fitness [ energy density ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Cond( "Fitness [ weight ]" - 4000,  7598 + 0.527 * "Fitness [ weight ]" , 5763 + 0.986 * "Fitness [ weight ]" )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Initial Energy Density</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Fitness [ energy density ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Fitness [ energy ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Fitness [ energy density ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Prepare for Data Lookup</name>
              <description />
              <qualifiedName>Accumulate ( Prepare for Data Lookup )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Data Column</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Time [ entry ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Data Row</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>1</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <dataLookupEvent>
              <name>Get Initial Temperature</name>
              <description />
              <qualifiedName>Data Lookup ( Get Initial Temperature )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>0</matrixCount>
                <rows>3</rows>
                <columns>0</columns>
                <matrices />
              </matrixSet>
              <trait>Fish Status [ behavior ]</trait>
              <traitCombinations>1 1 1</traitCombinations>
              <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\River Temperature.csv</fileName>
              <rowAccumulator>Data Row</rowAccumulator>
              <columnAccumulator>Data Column</columnAccumulator>
              <targetAccumulator>Temperature [ at time 1 ]</targetAccumulator>
              <hasColumnHeader>False</hasColumnHeader>
              <hasRowHeader>False</hasRowHeader>
            </dataLookupEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Mean Temperature</name>
              <description />
              <qualifiedName>Accumulate ( Set Mean Temperature )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Temperature [ at time 3 ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Temperature [ at time 1 ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Temperature [ at time 2 ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Temperature [ at time 1 ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Temperature [ mean ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Temperature [ at time 1 ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Movement Distances</name>
              <description />
              <qualifiedName>Accumulate ( Set Movement Distances )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Movement Distance [ target upstream ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Rand() * ( 'Movement Distance [ upstream upper bound chinook ]' - 'Movement Distance [ upstream lower bound chinook ]' ) + 'Movement Distance [ upstream lower bound chinook ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Distance [ target downstream ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Rand() * ( 'Movement Distance [ downstream upper bound ]' - 'Movement Distance [ downstream lower bound ]' ) + 'Movement Distance [ downstream lower bound ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Distance [ gradient refuge ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>'Movement Distance [ gradient refuge ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Distance [ gradient upstream ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>'Movement Distance [ gradient upstream ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Distance [ gradient downstream ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>'Movement Distance [ gradient downstream ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Add Initial Population [ steelhead ]</name>
          <description />
          <qualifiedName>Event Group ( Add Initial Population [ steelhead ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <introductionEvent>
              <name>Add Fish to Estuary</name>
              <description />
              <qualifiedName>Introduction ( Add Fish to Estuary )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <initialSize>5934</initialSize>
              <initializeForStreamNetworks>false</initializeForStreamNetworks>
              <initializationSpatialData>Special Sites [ initialization ]</initializationSpatialData>
            </introductionEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Ending Conditions</name>
              <description />
              <qualifiedName>Accumulate ( Set Ending Conditions )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Time [ exit ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Floor ( Max ( 2000 , 258 * GasDev() + 2568 ) + 0.5 )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Set Initial Weight</name>
              <description />
              <qualifiedName>Event Group ( Set Initial Weight )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Initial Weight</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Initial Weight )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Initial Weight</trait>
                    <traitCombinations>1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Initial Weight</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>1508 * GasDev( ) + 4170</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Initial Weight</trait>
                    <traitCombinations>0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Fitness [ weight ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Initial Weight"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <traitCombinations>1 0</traitCombinations>
              <trait>Initial Weight</trait>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Set Time of Entry</name>
              <description />
              <qualifiedName>Event Group ( Set Time of Entry )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Time of Entry</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Time of Entry )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Time [ entry ]</trait>
                    <traitCombinations>1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Random Time</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Floor ( GasDev() * 516 + 1056 + 0.5 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Time [ entry ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Time [ exit ]" - "Random Time" - 240 , "Random Time" , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <traitCombinations>1 0</traitCombinations>
              <trait>Time [ entry ]</trait>
            </eventGroupEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Fix Broken Weights and Times</name>
              <description />
              <qualifiedName>Accumulate ( Fix Broken Weights and Times )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Time [ entry ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Cond ( "Time [ entry ]" - 'Latest Time of Entry' , 'Latest Time of Entry' , "Time [ entry ]" )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Initial Weight</trait>
                <traitCombinations>1 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Initial Weight</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>7900</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
              <!--Stratified Updater Functions Group 1-->
              <stratifiedUpdaterFunctions>
                <trait>Initial Weight</trait>
                <traitCombinations>0 1</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ weight ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>"Initial Weight"</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
              <!--Stratified Updater Functions Group 2-->
              <stratifiedUpdaterFunctions>
                <trait>Time [ entry ]</trait>
                <traitCombinations>1 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Time [ entry ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>1056</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Initial Energy Parameters</name>
              <description />
              <qualifiedName>Accumulate ( Set Initial Energy Parameters )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Fitness [ energy density ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Cond( "Fitness [ weight ]" - 4000,  7598 + 0.527 * "Fitness [ weight ]" , 5763 + 0.986 * "Fitness [ weight ]" )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Initial Energy Density</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Fitness [ energy density ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Fitness [ energy ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Fitness [ energy density ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Prepare for Data Lookup</name>
              <description />
              <qualifiedName>Accumulate ( Prepare for Data Lookup )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Data Column</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Time [ entry ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Data Row</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>1</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <dataLookupEvent>
              <name>Get Initial Temperature</name>
              <description />
              <qualifiedName>Data Lookup ( Get Initial Temperature )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>0</matrixCount>
                <rows>3</rows>
                <columns>0</columns>
                <matrices />
              </matrixSet>
              <trait>Fish Status [ behavior ]</trait>
              <traitCombinations>1 1 1</traitCombinations>
              <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\River Temperature.csv</fileName>
              <rowAccumulator>Data Row</rowAccumulator>
              <columnAccumulator>Data Column</columnAccumulator>
              <targetAccumulator>Temperature [ at time 1 ]</targetAccumulator>
              <hasColumnHeader>False</hasColumnHeader>
              <hasRowHeader>False</hasRowHeader>
            </dataLookupEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Mean Temperature</name>
              <description />
              <qualifiedName>Accumulate ( Set Mean Temperature )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Temperature [ at time 3 ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Temperature [ at time 1 ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Temperature [ at time 2 ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Temperature [ at time 1 ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Temperature [ mean ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Temperature [ at time 1 ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Movement Distances</name>
              <description />
              <qualifiedName>Accumulate ( Set Movement Distances )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Movement Distance [ target upstream ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Rand() * ( 'Movement Distance [ upstream upper bound steelhead ]' - 'Movement Distance [ upstream lower bound steelhead ]' ) + 'Movement Distance [ upstream lower bound steelhead ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Distance [ target downstream ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Rand() * ( 'Movement Distance [ downstream upper bound ]' - 'Movement Distance [ downstream lower bound ]' ) + 'Movement Distance [ downstream lower bound ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Distance [ gradient refuge ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>'Movement Distance [ gradient refuge ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Distance [ gradient upstream ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>'Movement Distance [ gradient upstream ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Distance [ gradient downstream ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>'Movement Distance [ gradient downstream ]'</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event eventOff="True">
        <reanimationEvent>
          <name>Write Cache</name>
          <description />
          <qualifiedName>Reanimation ( Write Cache )</qualifiedName>
          <populationName>Chinook</populationName>
          <permanent>false</permanent>
          <reanimationType>Export</reanimationType>
          <timeStep>1</timeStep>
          <scenario>Migration_speed_23</scenario>
          <exportFilename>Cache.xml</exportFilename>
        </reanimationEvent>
      </event>
      <event eventOff="True">
        <reanimationEvent>
          <name>Read Cache</name>
          <description />
          <qualifiedName>Reanimation ( Read Cache )</qualifiedName>
          <populationName>Chinook</populationName>
          <permanent>false</permanent>
          <reanimationType>Import</reanimationType>
          <timeStep>1</timeStep>
          <scenario>Migration_speed_23</scenario>
          <importFilename>D:\HexSim_Models\Fish Model\Cache\Cache.xml</importFilename>
        </reanimationEvent>
      </event>
    </eventGroupEvent>
  </event>
  <event>
    <eventGroupEvent>
      <name>Set Pre-Movement State</name>
      <description />
      <qualifiedName>Event Group ( Set Pre-Movement State )</qualifiedName>
      <populationName />
      <permanent>false</permanent>
      <iterations>1</iterations>
      <event>
        <eventGroupEvent>
          <name>Update Environmental State [ chinook ]</name>
          <description />
          <qualifiedName>Event Group ( Update Environmental State [ chinook ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <accumulateEvent>
              <name>Update Fish Temporal Variables</name>
              <description />
              <qualifiedName>Accumulate ( Update Fish Temporal Variables )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Time Step</accumulator>
                <function>HexSimDomain.TimeStepUpdaterFunction</function>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Time [ in system ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Cond ( "Time Step" - "Time [ entry ]" , "Time [ in system ]" + 1 , Cond ( "Time Step" - "Time [ entry ]" + 1 , 1 , 0 ) )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Time [ remaining ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Time [ exit ]" - "Time Step"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Update Fish Status [ behavior ]</name>
              <description />
              <qualifiedName>Transition ( Update Fish Status [ behavior ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ behavior ]</transitionTrait>
              <trait>Fish Status [ terminus ]</trait>
              <trait>Time [ in system ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>6</rows>
                <columns>3</columns>
                <matrices>
1 0 0
0 1 0
0 1 0
0 0 1
0 0 1
0 0 1
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Pre-Movement Refuge ID</name>
              <description />
              <qualifiedName>Accumulate ( Set Pre-Movement Refuge ID )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <traitCombinations>0 1 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Trib and Plume ID [ pre-movement ]</accumulator>
                  <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                  <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Update Environmental State [ steelhead ]</name>
          <description />
          <qualifiedName>Event Group ( Update Environmental State [ steelhead ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <accumulateEvent>
              <name>Update Fish Temporal Variables</name>
              <description />
              <qualifiedName>Accumulate ( Update Fish Temporal Variables )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Time Step</accumulator>
                <function>HexSimDomain.TimeStepUpdaterFunction</function>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Time [ in system ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Cond ( "Time Step" - "Time [ entry ]" , "Time [ in system ]" + 1 , Cond ( "Time Step" - "Time [ entry ]" + 1 , 1 , 0 ) )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Time [ remaining ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Time [ exit ]" - "Time Step"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Update Fish Status [ behavior ]</name>
              <description />
              <qualifiedName>Transition ( Update Fish Status [ behavior ] )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ behavior ]</transitionTrait>
              <trait>Fish Status [ terminus ]</trait>
              <trait>Time [ in system ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>6</rows>
                <columns>3</columns>
                <matrices>
1 0 0
0 1 0
0 1 0
0 0 1
0 0 1
0 0 1
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Pre-Movement Refuge ID</name>
              <description />
              <qualifiedName>Accumulate ( Set Pre-Movement Refuge ID )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <traitCombinations>0 1 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Trib and Plume ID [ pre-movement ]</accumulator>
                  <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                  <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Update Energy State [ chinook ]</name>
          <description />
          <qualifiedName>Event Group ( Update Energy State [ chinook ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <accumulateEvent>
              <name>Record Pre-Refuge Energy Density</name>
              <description />
              <qualifiedName>Accumulate ( Record Pre-Refuge Energy Density )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Refuge History</trait>
                <traitCombinations>0 1 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Energy Density [ used in refuge ]</accumulator>
                  <function>HexSimDomain.ClearUpdaterFunction</function>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Energy Density [ pre-refuge ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>"Fitness [ energy ]"</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Update Energy Density</name>
              <description />
              <qualifiedName>Accumulate ( Update Energy Density )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Time [ at terminus ]</trait>
                <traitCombinations>0 0 0 1 1 0 0 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ energy density ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Cond( "Fitness [ weight ]" - 4000,  7598 + 0.527 * "Fitness [ weight ]" , 5763 + 0.986 * "Fitness [ weight ]" )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Measure Energy Used in Refuges</name>
              <description />
              <qualifiedName>Accumulate ( Measure Energy Used in Refuges )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Energy Density [ used in refuge ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Energy Density [ pre-refuge ]" - "Fitness [ energy density ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Energy Density [ used in refuge ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Max ( 0 , "Energy Density [ used in refuge ]" )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Mass Used in Respiration</name>
              <description />
              <qualifiedName>Accumulate ( Set Mass Used in Respiration )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Time [ at terminus ]</trait>
                <traitCombinations>0 0 0 1 1 0 0 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ mass equivalent ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>( 'Fish Respiration alpha' * 'Fish Respiration oxycalor' / "Fitness [ energy density ]" ) * ( Pow ( "Fitness [ weight ]" , 'Fish Respiration RB' ) ) </parameter>
                  <parameter>0</parameter>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Fitness [ temperature ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Exp ( 'Fish Respiration RQ' * "Temperature [ at time 1 ]" )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Fitness [ activity ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Exp ( 'Fish Respiration RTO' * 'Fish Respiration ACT' * ( Pow ( "Fitness [ weight ]" , 'Fish Respiration RK4' ) ) * ( Exp ( 'Fish Respiration BACT' * "Temperature [ at time 1 ]" ) ) )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
              <!--Stratified Updater Functions Group 1-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Refuge Status [ switch ]</trait>
                <traitCombinations>0 0 0 1 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ activity ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>1</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
              <!--Stratified Updater Functions Group 2-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Time [ at terminus ]</trait>
                <traitCombinations>0 0 0 1 1 0 0 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ mass used in respiration ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>"Fitness [ mass equivalent ]" * "Fitness [ temperature ]" * "Fitness [ activity ]" / 24</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Update Energy Reserves</name>
              <description />
              <qualifiedName>Accumulate ( Update Energy Reserves )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Time [ at terminus ]</trait>
                <traitCombinations>0 0 0 1 1 0 0 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ weight ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>"Fitness [ weight ]" - ( "Fitness [ weight ]" * "Fitness [ mass used in respiration ]" )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Fitness [ gamete energy ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>0.068 * ( 7598 + ( 0.527 * "Initial Weight" )) * "Initial Weight" </parameter>
                  <parameter>0</parameter>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Fitness [ energy ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Cond ( "Fitness [ weight ]" - 4000 , ( ( ( ( 7598 + ( 0.527 * "Fitness [ weight ]" ) ) * "Fitness [ weight ]" ) - "Fitness [ gamete energy ]" ) / "Initial Weight" )  , ( ( ( ( 5763 + ( 0.986 * "Fitness [ weight ]" ) ) * "Fitness [ weight ]" ) - "Fitness [ gamete energy ]" ) / "Initial Weight" )  )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Energy-Based Survival</name>
              <description />
              <qualifiedName>Accumulate ( Set Energy-Based Survival )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Survival [ switch ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>1</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <traitCombinations>0 1 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Survival [ switch ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Cond ( "Fitness [ energy ]" - 'Minimum Energy Density' , 1 , 0 )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <dataProbeEvent>
              <name>Record Dying Fish Statistics</name>
              <description />
              <qualifiedName>Data Probe ( Record Dying Fish Statistics )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <trait>Survival [ switch ]</trait>
              <traitCombinations>1 0</traitCombinations>
              <accumulator>Time [ entry ]</accumulator>
              <accumulator>Time [ exit ]</accumulator>
              <accumulator>Time [ in system ]</accumulator>
              <accumulator>Time [ remaining ]</accumulator>
              <accumulator>Hours in Cold Water [ total ]</accumulator>
              <accumulator>Initial Weight</accumulator>
              <accumulator>Initial Energy Density</accumulator>
              <accumulator>Fitness [ weight ]</accumulator>
              <accumulator>Fitness [ energy density ]</accumulator>
              <accumulator>Fitness [ energy ]</accumulator>
              <accumulator>Fitness [ mass used in respiration ]</accumulator>
              <accumulator>Fishing Pressure</accumulator>
              <accumulator>Temperature [ at time 1 ]</accumulator>
              <accumulator>Temperature [ mean ]</accumulator>
            </dataProbeEvent>
          </event>
          <event>
            <survivalEvent>
              <name>Remove Dying Fish</name>
              <description />
              <qualifiedName>Survival ( Remove Dying Fish )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <logParams logSurvival="true" logSurvivalDeaths="true" />
              <useAccumulator>true</useAccumulator>
              <survivalAccumulator>Survival [ switch ]</survivalAccumulator>
            </survivalEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Update Energy State [ steelhead ]</name>
          <description />
          <qualifiedName>Event Group ( Update Energy State [ steelhead ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <accumulateEvent>
              <name>Record Pre-Refuge Energy Density</name>
              <description />
              <qualifiedName>Accumulate ( Record Pre-Refuge Energy Density )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Refuge History</trait>
                <traitCombinations>0 1 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Energy Density [ used in refuge ]</accumulator>
                  <function>HexSimDomain.ClearUpdaterFunction</function>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Energy Density [ pre-refuge ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>"Fitness [ energy ]"</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Update Energy Density</name>
              <description />
              <qualifiedName>Accumulate ( Update Energy Density )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Time [ at terminus ]</trait>
                <traitCombinations>0 0 0 1 1 0 0 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ energy density ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Cond( "Fitness [ weight ]" - 4000,  7598 + 0.527 * "Fitness [ weight ]" , 5763 + 0.986 * "Fitness [ weight ]" )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Measure Energy Used in Refuges</name>
              <description />
              <qualifiedName>Accumulate ( Measure Energy Used in Refuges )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Energy Density [ used in refuge ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>"Energy Density [ pre-refuge ]" - "Fitness [ energy density ]"</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Energy Density [ used in refuge ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>Max ( 0 , "Energy Density [ used in refuge ]" )</parameter>
                <parameter>0</parameter>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Mass Used in Respiration</name>
              <description />
              <qualifiedName>Accumulate ( Set Mass Used in Respiration )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Time [ at terminus ]</trait>
                <traitCombinations>0 0 0 1 1 0 0 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ mass equivalent ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>( 'Fish Respiration alpha' * 'Fish Respiration oxycalor' / "Fitness [ energy density ]" ) * ( Pow ( "Fitness [ weight ]" , 'Fish Respiration RB' ) ) </parameter>
                  <parameter>0</parameter>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Fitness [ temperature ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Exp ( 'Fish Respiration RQ' * "Temperature [ at time 1 ]" )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Fitness [ activity ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Exp ( 'Fish Respiration RTO' * 'Fish Respiration ACT' * ( Pow ( "Fitness [ weight ]" , 'Fish Respiration RK4' ) ) * ( Exp ( 'Fish Respiration BACT' * "Temperature [ at time 1 ]" ) ) )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
              <!--Stratified Updater Functions Group 1-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Refuge Status [ switch ]</trait>
                <traitCombinations>0 0 0 1 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ activity ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>1</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
              <!--Stratified Updater Functions Group 2-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Time [ at terminus ]</trait>
                <traitCombinations>0 0 0 1 1 0 0 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ mass used in respiration ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>"Fitness [ mass equivalent ]" * "Fitness [ temperature ]" * "Fitness [ activity ]" / 24</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Update Energy Reserves</name>
              <description />
              <qualifiedName>Accumulate ( Update Energy Reserves )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <trait>Time [ at terminus ]</trait>
                <traitCombinations>0 0 0 1 1 0 0 0 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Fitness [ weight ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>"Fitness [ weight ]" - ( "Fitness [ weight ]" * "Fitness [ mass used in respiration ]" )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Fitness [ gamete energy ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>0.068 * ( 7598 + ( 0.527 * "Initial Weight" )) * "Initial Weight" </parameter>
                  <parameter>0</parameter>
                </updaterFunction>
                <updaterFunction>
                  <accumulator>Fitness [ energy ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Cond ( "Fitness [ weight ]" - 4000 , ( ( ( ( 7598 + ( 0.527 * "Fitness [ weight ]" ) ) * "Fitness [ weight ]" ) - "Fitness [ gamete energy ]" ) / "Initial Weight" )  , ( ( ( ( 5763 + ( 0.986 * "Fitness [ weight ]" ) ) * "Fitness [ weight ]" ) - "Fitness [ gamete energy ]" ) / "Initial Weight" )  )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Set Energy-Based Survival</name>
              <description />
              <qualifiedName>Accumulate ( Set Energy-Based Survival )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Survival [ switch ]</accumulator>
                <function>HexSimDomain.ExpressionUpdaterFunction</function>
                <parameter>1</parameter>
                <parameter>0</parameter>
              </updaterFunction>
              <!--Stratified Updater Functions Group 0-->
              <stratifiedUpdaterFunctions>
                <trait>Fish Status [ behavior ]</trait>
                <traitCombinations>0 1 0</traitCombinations>
                <updaterFunction>
                  <accumulator>Survival [ switch ]</accumulator>
                  <function>HexSimDomain.ExpressionUpdaterFunction</function>
                  <parameter>Cond ( "Fitness [ energy ]" - 'Minimum Energy Density' , 1 , 0 )</parameter>
                  <parameter>0</parameter>
                </updaterFunction>
              </stratifiedUpdaterFunctions>
            </accumulateEvent>
          </event>
          <event>
            <dataProbeEvent>
              <name>Record Dying Fish Statistics</name>
              <description />
              <qualifiedName>Data Probe ( Record Dying Fish Statistics )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <trait>Survival [ switch ]</trait>
              <traitCombinations>1 0</traitCombinations>
              <accumulator>Time [ entry ]</accumulator>
              <accumulator>Time [ exit ]</accumulator>
              <accumulator>Time [ in system ]</accumulator>
              <accumulator>Time [ remaining ]</accumulator>
              <accumulator>Hours in Cold Water [ total ]</accumulator>
              <accumulator>Initial Weight</accumulator>
              <accumulator>Initial Energy Density</accumulator>
              <accumulator>Fitness [ weight ]</accumulator>
              <accumulator>Fitness [ energy density ]</accumulator>
              <accumulator>Fitness [ energy ]</accumulator>
              <accumulator>Fitness [ mass used in respiration ]</accumulator>
              <accumulator>Fishing Pressure</accumulator>
              <accumulator>Temperature [ at time 1 ]</accumulator>
              <accumulator>Temperature [ mean ]</accumulator>
            </dataProbeEvent>
          </event>
          <event>
            <survivalEvent>
              <name>Remove Dying Fish</name>
              <description />
              <qualifiedName>Survival ( Remove Dying Fish )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <logParams logSurvival="true" logSurvivalDeaths="true" />
              <useAccumulator>true</useAccumulator>
              <survivalAccumulator>Survival [ switch ]</survivalAccumulator>
            </survivalEvent>
          </event>
        </eventGroupEvent>
      </event>
    </eventGroupEvent>
  </event>
  <event>
    <eventGroupEvent>
      <name>Set Movement Behavior</name>
      <description />
      <qualifiedName>Event Group ( Set Movement Behavior )</qualifiedName>
      <populationName />
      <permanent>false</permanent>
      <iterations>1</iterations>
      <event>
        <eventGroupEvent>
          <name>Set Movement Behavior [ chinook ]</name>
          <description />
          <qualifiedName>Event Group ( Set Movement Behavior [ chinook ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <transitionEvent>
              <name>Set Movement Behavior</name>
              <description />
              <qualifiedName>Transition ( Set Movement Behavior )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Fish Status [ motivation ]</trait>
              <trait>Fish Status [ thermal ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>22</rows>
                <columns>5</columns>
                <matrices>
0 0 0 1 0
0 0 0.000416667 0.9995833 0
0 0 0.000833333 0.9991667 0
0 0 0.001666667 0.9983333 0
0 0 0.0075 0.9925 0
0 0 0.01666667 0.9833333 0
0 0 0.03666667 0.9633333 0
0 0 0.04166667 0.9583333 0
0 0 0.04166667 0.9583333 0
0 0 0.04166667 0.9583333 0
0 0 0.04166667 0.9583333 0
0 0 0 1 0
0 0 0.000416667 0.9995833 0
0 0 0.000833333 0.9991667 0
0 0 0.001666667 0.9983333 0
0 0 0.0075 0.9925 0
0 0 0.01666667 0.9833333 0
0 0 0.03666667 0.9633333 0
0 0 0.04166667 0.9583333 0
0 0 0.04166667 0.9583333 0
0 0 0.04166667 0.9583333 0
0 0 0.04166667 0.9583333 0
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ holding in CWR ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ holding in CWR ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Refuge Status [ switch ]</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>10</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
0 0 1 0 0
0 0 1 0 0
0 0 1 0 0
0 0 1 0 0
0 0 1 0 0
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ abandoning CWR ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ abandoning CWR ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Fish Selector</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>10</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ thermal gradient ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ thermal gradient ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Thermal Gradient</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>10</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
1 0 0 0 0
0 1 0 0 0
0 0 0 1 0
0 0 0 1 0
0 0 0 0 1
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ refuge avoidance ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ refuge avoidance ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Refuge Avoidance</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>10</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
1 0 0 0 0
0 1 0 0 0
0 0 0 1 0
0 0 0 1 0
0 0 0 0 1
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ active versus inactive ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ active versus inactive ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Fish Status [ behavior ]</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>15</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ first movement step ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ first movement step ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Time [ in system ]</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>15</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Set Movement Behavior [ steelhead ]</name>
          <description />
          <qualifiedName>Event Group ( Set Movement Behavior [ steelhead ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <transitionEvent>
              <name>Set Movement Behavior</name>
              <description />
              <qualifiedName>Transition ( Set Movement Behavior )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Fish Status [ motivation ]</trait>
              <trait>Fish Status [ thermal ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>22</rows>
                <columns>5</columns>
                <matrices>
0 0 0 1 0
0 0 0.000833333 0.9991667 0
0 0 0.002 0.998 0
0 0 0.005 0.995 0
0 0 0.009 0.991 0
0 0 0.0325 0.9675 0
0 0 0.0375 0.9625 0
0 0 0.04 0.96 0
0 0 0.042 0.958 0
0 0 0.042 0.958 0
0 0 0.042 0.958 0
0 0 0 1 0
0 0 0.000833333 0.9991667 0
0 0 0.002 0.998 0
0 0 0.005 0.995 0
0 0 0.009 0.991 0
0 0 0.02708333 0.9729167 0
0 0 0.0325 0.9675 0
0 0 0.03666667 0.9633333 0
0 0 0.0375 0.9625 0
0 0 0.04166667 0.9583333 0
0 0 0.04166667 0.9583333 0
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ holding in CWR ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ holding in CWR ] )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Refuge Status [ switch ]</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>10</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
0 0 1 0 0
0 0 1 0 0
0 0 1 0 0
0 0 1 0 0
0 0 1 0 0
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ abandoning CWR ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ abandoning CWR ] )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Fish Selector</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>10</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ thermal gradient ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ thermal gradient ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Thermal Gradient</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>10</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
1 0 0 0 0
0 1 0 0 0
0 0 0 1 0
0 0 0 1 0
0 0 0 0 1
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ refuge avoidance ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ refuge avoidance ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Refuge Avoidance</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>10</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
1 0 0 0 0
0 1 0 0 0
0 0 0 1 0
0 0 0 1 0
0 0 0 0 1
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ active versus inactive ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ active versus inactive ] )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Fish Status [ behavior ]</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>15</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
          <event>
            <transitionEvent>
              <name>Adjust Movement [ first movement step ]</name>
              <description />
              <qualifiedName>Transition ( Adjust Movement [ first movement step ] )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <transitionTrait>Fish Status [ movement ]</transitionTrait>
              <trait>Time [ in system ]</trait>
              <trait>Fish Status [ movement ]</trait>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>15</rows>
                <columns>5</columns>
                <matrices>
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
1 0 0 0 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
0 0 0 1 0
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
</matrices>
              </matrixSet>
            </transitionEvent>
          </event>
        </eventGroupEvent>
      </event>
    </eventGroupEvent>
  </event>
  <event>
    <eventGroupEvent>
      <name>Perform Movement</name>
      <description />
      <qualifiedName>Event Group ( Perform Movement )</qualifiedName>
      <populationName />
      <permanent>false</permanent>
      <iterations>1</iterations>
      <event>
        <eventGroupEvent>
          <name>Prepare for Movement</name>
          <description />
          <qualifiedName>Event Group ( Prepare for Movement )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <accumulateEvent>
              <name>Clear Movement Iterators</name>
              <description />
              <qualifiedName>Accumulate ( Clear Movement Iterators )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Iterator</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Refuge Iterator [ chinook ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Refuge Iterator [ steelhead ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Downstream Iterator [ chinook ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Downstream Iterator [ steelhead ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Upstream Iterator [ chinook ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Upstream Iterator [ steelhead ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Clear Switch and Tally [ chinook ]</name>
              <description />
              <qualifiedName>Accumulate ( Clear Switch and Tally [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Movement [ switch ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Tally [ old ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Tally [ new ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
            </accumulateEvent>
          </event>
          <event>
            <accumulateEvent>
              <name>Clear Switch and Tally [ steelhead ]</name>
              <description />
              <qualifiedName>Accumulate ( Clear Switch and Tally [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <!--Global Updater Functions-->
              <updaterFunction>
                <accumulator>Movement [ switch ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Tally [ old ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
              <updaterFunction>
                <accumulator>Movement Tally [ new ]</accumulator>
                <function>HexSimDomain.ClearUpdaterFunction</function>
              </updaterFunction>
            </accumulateEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Move Fish [ chinook ]</name>
          <description />
          <qualifiedName>Event Group ( Move Fish [ chinook ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <eventGroupEvent>
              <name>Move Randomly</name>
              <description />
              <qualifiedName>Event Group ( Move Randomly )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Movement Distance</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Movement Distance )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <traitCombinations>0 1 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Movement Distance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Rand() * ( 'Movement Distance [ random upper bound ]' - 'Movement Distance [ random lower bound ]' ) + 'Movement Distance [ random lower bound ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Randomly</name>
                  <description />
                  <qualifiedName>Movement ( Move Randomly )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator />
                  <trait>Fish Status [ movement ]</trait>
                  <traitCombinations>0 1 0 0 0</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ edge ]</dispersalSpatialData>
                  <walkUpGradient>false</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>0.00000 25.00000 25.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>100.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.6</dispersalAutoCorrelation>
                  <trendPeriod>5</trendPeriod>
                  <dispersalUseAffinity />
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Move to Cold Water</name>
              <description />
              <qualifiedName>Event Group ( Move to Cold Water )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Affinity and Path Bounds</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Affinity and Path Bounds )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 1 0 0 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ min ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ cold water minimum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ cold water maximum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Distance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>2 * "Affinity Bound [ max ]" / 'Hexagon Width'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <setSpatialAffinityEvent>
                  <name>Select Cold Location</name>
                  <description />
                  <qualifiedName>Set Spatial Affinity ( Select Cold Location )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logSpatialAffinity="true" />
                  <affinity>Movement Goal</affinity>
                  <strategy>better</strategy>
                  <spatialSeries>Gradient [ cold water ]</spatialSeries>
                  <errorAccumulator>Affinity Switch</errorAccumulator>
                  <useBounds>True</useBounds>
                  <min>0</min>
                  <max>0</max>
                  <minAccumulator>Affinity Bound [ min ]</minAccumulator>
                  <maxAccumulator>Affinity Bound [ max ]</maxAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0</traitCombinations>
                </setSpatialAffinityEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Evaluate Affinity Status</name>
                  <description />
                  <qualifiedName>Transition ( Evaluate Affinity Status )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Affinity Status</transitionTrait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <trait>Affinity Switch</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>8</rows>
                    <columns>2</columns>
                    <matrices>
0 1
1 0
1 0
1 0
1 0
1 0
1 0
1 0
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move to Cold Water [ affinity ]</name>
                  <description />
                  <qualifiedName>Movement ( Move to Cold Water [ affinity ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Affinity Status</trait>
                  <trait>Fish Status [ movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 1 0 0</traitCombinations>
                  <dispersalSpatialData>River [ extent ]</dispersalSpatialData>
                  <walkUpGradient>false</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance</dispersalAccumulator>
                  <dispersalHaltMinimum>1</dispersalHaltMinimum>
                  <dispersalHaltTarget>2</dispersalHaltTarget>
                  <dispersalHaltMemory>1</dispersalHaltMemory>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>0.00000 0.00000 100.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>1.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <dispersalUseAffinity>Movement Goal</dispersalUseAffinity>
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move to Cold Water [ gradient ]</name>
                  <description />
                  <qualifiedName>Movement ( Move to Cold Water [ gradient ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <traitCombinations>0 0 0 0 1 0 0 0 0 0</traitCombinations>
                  <dispersalSpatialData>Gradient [ cold water ]</dispersalSpatialData>
                  <walkUpGradient>true</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance [ gradient refuge ]</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>-1.00000 -1.00000 100.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>1.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <trendPeriod>5</trendPeriod>
                  <dispersalUseAffinity />
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Movement Switch</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Movement Switch )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 1 0 0 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Trib and Plume ID [ pre-movement ]" + "Trib and Plume ID [ post-movement ]" , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Tally [ old ]" , "Movement [ switch ]" , 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Tally [ old ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Movement Tally [ new ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Increment Movement Iterator</name>
                  <description />
                  <qualifiedName>Accumulate ( Increment Movement Iterator )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Iterator</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Refuge Iterator [ chinook ]</accumulator>
                    <function>HexSimDomain.IncrementUpdaterFunction</function>
                    <parameter>1</parameter>
                  </updaterFunction>
                </accumulateEvent>
              </event>
              <traitCombinations>0 0 0 0 1 0 0 0 0 0</traitCombinations>
              <trait>Fish Status [ movement ]</trait>
              <trait>Movement [ switch ]</trait>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Move Upstream</name>
              <description />
              <qualifiedName>Event Group ( Move Upstream )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Affinity and Path Bounds</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Affinity and Path Bounds )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 0 0 1 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ min ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ upstream minimum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ upstream maximum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Distance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>2 * "Affinity Bound [ max ]" / 'Hexagon Width'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <setSpatialAffinityEvent>
                  <name>Select Upstream Location</name>
                  <description />
                  <qualifiedName>Set Spatial Affinity ( Select Upstream Location )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logSpatialAffinity="true" />
                  <affinity>Movement Goal</affinity>
                  <strategy>better</strategy>
                  <spatialSeries>Modified Gradient Map [ upstream ]</spatialSeries>
                  <errorAccumulator>Affinity Switch</errorAccumulator>
                  <useBounds>True</useBounds>
                  <min>0</min>
                  <max>0</max>
                  <minAccumulator>Affinity Bound [ min ]</minAccumulator>
                  <maxAccumulator>Affinity Bound [ max ]</maxAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0</traitCombinations>
                </setSpatialAffinityEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Evaluate Affinity Status</name>
                  <description />
                  <qualifiedName>Transition ( Evaluate Affinity Status )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Affinity Status</transitionTrait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <trait>Affinity Switch</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>8</rows>
                    <columns>2</columns>
                    <matrices>
0 1
1 0
1 0
1 0
1 0
1 0
1 0
1 0
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Upstream [ affinity ]</name>
                  <description />
                  <qualifiedName>Movement ( Move Upstream [ affinity ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Affinity Status</trait>
                  <trait>Fish Status [ movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ edge ]</dispersalSpatialData>
                  <walkUpGradient>false</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>0.00000 25.00000 25.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>100.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <dispersalUseAffinity>Movement Goal</dispersalUseAffinity>
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Upstream [ gradient ]</name>
                  <description />
                  <qualifiedName>Movement ( Move Upstream [ gradient ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <traitCombinations>0 0 0 0 0 0 1 0 0 0</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ upstream ]</dispersalSpatialData>
                  <walkUpGradient>true</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance [ gradient upstream ]</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>-1.00000 -1.00000 100.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>1.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <trendPeriod>5</trendPeriod>
                  <dispersalUseAffinity />
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Movement Switch</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Movement Switch )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 0 0 1 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Distance [ target upstream ]" , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Tally [ old ]" , "Movement [ switch ]" , 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Tally [ old ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Movement Tally [ new ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Increment Movement Iterator</name>
                  <description />
                  <qualifiedName>Accumulate ( Increment Movement Iterator )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Iterator</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Upstream Iterator [ chinook ]</accumulator>
                    <function>HexSimDomain.IncrementUpdaterFunction</function>
                    <parameter>1</parameter>
                  </updaterFunction>
                </accumulateEvent>
              </event>
              <traitCombinations>0 0 0 0 0 0 1 0 0 0</traitCombinations>
              <trait>Fish Status [ movement ]</trait>
              <trait>Movement [ switch ]</trait>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Move Downstream</name>
              <description />
              <qualifiedName>Event Group ( Move Downstream )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Affinity and Path Bounds</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Affinity and Path Bounds )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ min ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ downstream minimum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ downstream maximum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Distance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>2 * "Affinity Bound [ max ]" / 'Hexagon Width'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <setSpatialAffinityEvent>
                  <name>Select Downstream Location</name>
                  <description />
                  <qualifiedName>Set Spatial Affinity ( Select Downstream Location )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logSpatialAffinity="true" />
                  <affinity>Movement Goal</affinity>
                  <strategy>better</strategy>
                  <spatialSeries>Modified Gradient Map [ downstream ]</spatialSeries>
                  <errorAccumulator>Affinity Switch</errorAccumulator>
                  <useBounds>True</useBounds>
                  <min>0</min>
                  <max>0</max>
                  <minAccumulator>Affinity Bound [ min ]</minAccumulator>
                  <maxAccumulator>Affinity Bound [ max ]</maxAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0</traitCombinations>
                </setSpatialAffinityEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Evaluate Affinity Status</name>
                  <description />
                  <qualifiedName>Transition ( Evaluate Affinity Status )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Affinity Status</transitionTrait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <trait>Affinity Switch</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>8</rows>
                    <columns>2</columns>
                    <matrices>
0 1
1 0
1 0
1 0
1 0
1 0
1 0
1 0
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Downstream [ affinity ]</name>
                  <description />
                  <qualifiedName>Movement ( Move Downstream [ affinity ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Affinity Status</trait>
                  <trait>Fish Status [ movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 0 1</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ edge ]</dispersalSpatialData>
                  <walkUpGradient>false</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>0.00000 25.00000 25.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>100.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <dispersalUseAffinity>Movement Goal</dispersalUseAffinity>
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Downstream [ gradient ]</name>
                  <description />
                  <qualifiedName>Movement ( Move Downstream [ gradient ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ downstream ]</dispersalSpatialData>
                  <walkUpGradient>true</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance [ gradient downstream ]</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>-1.00000 -1.00000 100.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>1.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <trendPeriod>5</trendPeriod>
                  <dispersalUseAffinity />
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Movement Switch</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Movement Switch )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Distance [ target downstream ]" , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Tally [ old ]" , "Movement [ switch ]" , 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Tally [ old ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Movement Tally [ new ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Increment Movement Iterator</name>
                  <description />
                  <qualifiedName>Accumulate ( Increment Movement Iterator )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Iterator</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Downstream Iterator [ chinook ]</accumulator>
                    <function>HexSimDomain.IncrementUpdaterFunction</function>
                    <parameter>1</parameter>
                  </updaterFunction>
                </accumulateEvent>
              </event>
              <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
              <trait>Fish Status [ movement ]</trait>
              <trait>Movement [ switch ]</trait>
            </eventGroupEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Move Fish [ steelhead ]</name>
          <description />
          <qualifiedName>Event Group ( Move Fish [ steelhead ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <eventGroupEvent>
              <name>Move Randomly</name>
              <description />
              <qualifiedName>Event Group ( Move Randomly )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Movement Distance</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Movement Distance )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <traitCombinations>0 1 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Movement Distance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Rand() * ( 'Movement Distance [ random upper bound ]' - 'Movement Distance [ random lower bound ]' ) + 'Movement Distance [ random lower bound ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Randomly</name>
                  <description />
                  <qualifiedName>Movement ( Move Randomly )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator />
                  <trait>Fish Status [ movement ]</trait>
                  <traitCombinations>0 1 0 0 0</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ edge ]</dispersalSpatialData>
                  <walkUpGradient>false</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>0.00000 25.00000 25.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>100.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.6</dispersalAutoCorrelation>
                  <trendPeriod>5</trendPeriod>
                  <dispersalUseAffinity />
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Move to Cold Water</name>
              <description />
              <qualifiedName>Event Group ( Move to Cold Water )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Affinity and Path Bounds</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Affinity and Path Bounds )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 1 0 0 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ min ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ cold water minimum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ cold water maximum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Distance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>2 * "Affinity Bound [ max ]" / 'Hexagon Width'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <setSpatialAffinityEvent>
                  <name>Select Cold Location</name>
                  <description />
                  <qualifiedName>Set Spatial Affinity ( Select Cold Location )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logSpatialAffinity="true" />
                  <affinity>Movement Goal</affinity>
                  <strategy>better</strategy>
                  <spatialSeries>Gradient [ cold water ]</spatialSeries>
                  <errorAccumulator>Affinity Switch</errorAccumulator>
                  <useBounds>True</useBounds>
                  <min>0</min>
                  <max>0</max>
                  <minAccumulator>Affinity Bound [ min ]</minAccumulator>
                  <maxAccumulator>Affinity Bound [ max ]</maxAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0</traitCombinations>
                </setSpatialAffinityEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Evaluate Affinity Status</name>
                  <description />
                  <qualifiedName>Transition ( Evaluate Affinity Status )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Affinity Status</transitionTrait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <trait>Affinity Switch</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>8</rows>
                    <columns>2</columns>
                    <matrices>
0 1
1 0
1 0
1 0
1 0
1 0
1 0
1 0
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move to Cold Water [ affinity ]</name>
                  <description />
                  <qualifiedName>Movement ( Move to Cold Water [ affinity ] )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Affinity Status</trait>
                  <trait>Fish Status [ movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 1 0 0</traitCombinations>
                  <dispersalSpatialData>River [ extent ]</dispersalSpatialData>
                  <walkUpGradient>false</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance</dispersalAccumulator>
                  <dispersalHaltMinimum>1</dispersalHaltMinimum>
                  <dispersalHaltTarget>2</dispersalHaltTarget>
                  <dispersalHaltMemory>1</dispersalHaltMemory>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>0.00000 0.00000 100.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>1.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <dispersalUseAffinity>Movement Goal</dispersalUseAffinity>
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move to Cold Water [ gradient ]</name>
                  <description />
                  <qualifiedName>Movement ( Move to Cold Water [ gradient ] )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <traitCombinations>0 0 0 0 1 0 0 0 0 0</traitCombinations>
                  <dispersalSpatialData>Gradient [ cold water ]</dispersalSpatialData>
                  <walkUpGradient>true</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance [ gradient refuge ]</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>-1.00000 -1.00000 100.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>1.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <trendPeriod>5</trendPeriod>
                  <dispersalUseAffinity />
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Movement Switch</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Movement Switch )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 1 0 0 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Trib and Plume ID [ pre-movement ]" + "Trib and Plume ID [ post-movement ]" , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Tally [ old ]" , "Movement [ switch ]" , 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Tally [ old ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Movement Tally [ new ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Increment Movement Iterator</name>
                  <description />
                  <qualifiedName>Accumulate ( Increment Movement Iterator )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Iterator</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Refuge Iterator [ steelhead ]</accumulator>
                    <function>HexSimDomain.IncrementUpdaterFunction</function>
                    <parameter>1</parameter>
                  </updaterFunction>
                </accumulateEvent>
              </event>
              <traitCombinations>0 0 0 0 1 0 0 0 0 0</traitCombinations>
              <trait>Fish Status [ movement ]</trait>
              <trait>Movement [ switch ]</trait>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Move Upstream</name>
              <description />
              <qualifiedName>Event Group ( Move Upstream )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Affinity and Path Bounds</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Affinity and Path Bounds )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 0 0 1 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ min ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ upstream minimum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ upstream maximum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Distance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>2 * "Affinity Bound [ max ]" / 'Hexagon Width'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <setSpatialAffinityEvent>
                  <name>Select Upstream Location</name>
                  <description />
                  <qualifiedName>Set Spatial Affinity ( Select Upstream Location )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logSpatialAffinity="true" />
                  <affinity>Movement Goal</affinity>
                  <strategy>better</strategy>
                  <spatialSeries>Modified Gradient Map [ upstream ]</spatialSeries>
                  <errorAccumulator>Affinity Switch</errorAccumulator>
                  <useBounds>True</useBounds>
                  <min>0</min>
                  <max>0</max>
                  <minAccumulator>Affinity Bound [ min ]</minAccumulator>
                  <maxAccumulator>Affinity Bound [ max ]</maxAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0</traitCombinations>
                </setSpatialAffinityEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Evaluate Affinity Status</name>
                  <description />
                  <qualifiedName>Transition ( Evaluate Affinity Status )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Affinity Status</transitionTrait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <trait>Affinity Switch</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>8</rows>
                    <columns>2</columns>
                    <matrices>
0 1
1 0
1 0
1 0
1 0
1 0
1 0
1 0
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Upstream [ affinity ]</name>
                  <description />
                  <qualifiedName>Movement ( Move Upstream [ affinity ] )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Affinity Status</trait>
                  <trait>Fish Status [ movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ edge ]</dispersalSpatialData>
                  <walkUpGradient>false</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>0.00000 25.00000 25.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>100.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <dispersalUseAffinity>Movement Goal</dispersalUseAffinity>
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Upstream [ gradient ]</name>
                  <description />
                  <qualifiedName>Movement ( Move Upstream [ gradient ] )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <traitCombinations>0 0 0 0 0 0 1 0 0 0</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ upstream ]</dispersalSpatialData>
                  <walkUpGradient>true</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance [ gradient upstream ]</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>-1.00000 -1.00000 100.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>1.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <trendPeriod>5</trendPeriod>
                  <dispersalUseAffinity />
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Movement Switch</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Movement Switch )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 0 0 1 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Distance [ target upstream ]" , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Tally [ old ]" , "Movement [ switch ]" , 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Tally [ old ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Movement Tally [ new ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Increment Movement Iterator</name>
                  <description />
                  <qualifiedName>Accumulate ( Increment Movement Iterator )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Iterator</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Upstream Iterator [ steelhead ]</accumulator>
                    <function>HexSimDomain.IncrementUpdaterFunction</function>
                    <parameter>1</parameter>
                  </updaterFunction>
                </accumulateEvent>
              </event>
              <traitCombinations>0 0 0 0 0 0 1 0 0 0</traitCombinations>
              <trait>Fish Status [ movement ]</trait>
              <trait>Movement [ switch ]</trait>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Move Downstream</name>
              <description />
              <qualifiedName>Event Group ( Move Downstream )</qualifiedName>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <iterations>100</iterations>
              <event>
                <accumulateEvent>
                  <name>Set Affinity and Path Bounds</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Affinity and Path Bounds )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ min ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ downstream minimum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Affinity Bound [ max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Affinity Search Bounds [ downstream maximum ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Distance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>2 * "Affinity Bound [ max ]" / 'Hexagon Width'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <setSpatialAffinityEvent>
                  <name>Select Downstream Location</name>
                  <description />
                  <qualifiedName>Set Spatial Affinity ( Select Downstream Location )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logSpatialAffinity="true" />
                  <affinity>Movement Goal</affinity>
                  <strategy>better</strategy>
                  <spatialSeries>Modified Gradient Map [ downstream ]</spatialSeries>
                  <errorAccumulator>Affinity Switch</errorAccumulator>
                  <useBounds>True</useBounds>
                  <min>0</min>
                  <max>0</max>
                  <minAccumulator>Affinity Bound [ min ]</minAccumulator>
                  <maxAccumulator>Affinity Bound [ max ]</maxAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0</traitCombinations>
                </setSpatialAffinityEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Evaluate Affinity Status</name>
                  <description />
                  <qualifiedName>Transition ( Evaluate Affinity Status )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Affinity Status</transitionTrait>
                  <trait>Movement [ switch ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <trait>Affinity Switch</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>8</rows>
                    <columns>2</columns>
                    <matrices>
0 1
1 0
1 0
1 0
1 0
1 0
1 0
1 0
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Downstream [ affinity ]</name>
                  <description />
                  <qualifiedName>Movement ( Move Downstream [ affinity ] )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Affinity Status</trait>
                  <trait>Fish Status [ movement ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 0 1</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ edge ]</dispersalSpatialData>
                  <walkUpGradient>false</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>0.00000 25.00000 25.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>100.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <dispersalUseAffinity>Movement Goal</dispersalUseAffinity>
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <moveEvent>
                  <name>Move Downstream [ gradient ]</name>
                  <description />
                  <qualifiedName>Movement ( Move Downstream [ gradient ] )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
                  <moveStrategy>onlyDisperse</moveStrategy>
                  <distanceAccumulator>Movement Tally [ new ]</distanceAccumulator>
                  <trait>Fish Status [ movement ]</trait>
                  <trait>Movement [ switch ]</trait>
                  <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
                  <dispersalSpatialData>Modified Gradient Map [ downstream ]</dispersalSpatialData>
                  <walkUpGradient>true</walkUpGradient>
                  <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
                  <dispersalAccumulator>Movement Distance [ gradient downstream ]</dispersalAccumulator>
                  <avoidExploredArea>false</avoidExploredArea>
                  <attractionCoefficients>-1.00000 -1.00000 100.00000 100.00000</attractionCoefficients>
                  <attractionMultiplier>1.00000</attractionMultiplier>
                  <dispersalAutoCorrelation>0.8</dispersalAutoCorrelation>
                  <trendPeriod>5</trendPeriod>
                  <dispersalUseAffinity />
                  <priorityExplore>false</priorityExplore>
                  <resourceThreshold>1</resourceThreshold>
                </moveEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Movement Switch</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Movement Switch )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ movement ]</trait>
                    <trait>Movement [ switch ]</trait>
                    <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Distance [ target downstream ]" , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Movement Tally [ new ]" - "Movement Tally [ old ]" , "Movement [ switch ]" , 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Movement Tally [ old ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Movement Tally [ new ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Increment Movement Iterator</name>
                  <description />
                  <qualifiedName>Accumulate ( Increment Movement Iterator )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Iterator</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Downstream Iterator [ steelhead ]</accumulator>
                    <function>HexSimDomain.IncrementUpdaterFunction</function>
                    <parameter>1</parameter>
                  </updaterFunction>
                </accumulateEvent>
              </event>
              <traitCombinations>0 0 0 0 0 0 0 0 1 0</traitCombinations>
              <trait>Fish Status [ movement ]</trait>
              <trait>Movement [ switch ]</trait>
            </eventGroupEvent>
          </event>
        </eventGroupEvent>
      </event>
    </eventGroupEvent>
  </event>
  <event>
    <eventGroupEvent>
      <name>Set Post-Movement State</name>
      <description />
      <qualifiedName>Event Group ( Set Post-Movement State )</qualifiedName>
      <populationName />
      <permanent>false</permanent>
      <iterations>1</iterations>
      <event>
        <eventGroupEvent>
          <name>Update State Variables [ chinook ]</name>
          <description />
          <qualifiedName>Event Group ( Update State Variables [ chinook ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <eventGroupEvent>
              <name>Update Space and Time Variables</name>
              <description />
              <qualifiedName>Event Group ( Update Space and Time Variables )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <accumulateEvent>
                  <name>Update River Kilometer Data</name>
                  <description />
                  <qualifiedName>Accumulate ( Update River Kilometer Data )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>River Kilometer</accumulator>
                      <function>HexSimDomain.QuantifyLocationUpdaterFunction</function>
                      <parameter>1</parameter>
                      <accumulateSpatialData>Gradient [ upstream ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>River Kilometer</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"River Kilometer" * 'Hexagon Width'  / 1000</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Terminus Status</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Terminus Status )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Fish Status [ terminus ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ terminus ]</accumulateSpatialData>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Post-Movement Refuge ID</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Post-Movement Refuge ID )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Update Refuge History</name>
                  <description />
                  <qualifiedName>Transition ( Update Refuge History )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Refuge History</transitionTrait>
                  <trait>Refuge Status [ pre-movement ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>4</rows>
                    <columns>4</columns>
                    <matrices>
1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Finalize Refuge History</name>
                  <description />
                  <qualifiedName>Transition ( Finalize Refuge History )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Refuge History</transitionTrait>
                  <trait>Time [ at terminus ]</trait>
                  <trait>Refuge History</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>12</rows>
                    <columns>4</columns>
                    <matrices>
1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1
1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1
1 0 0 0
1 0 0 0
1 0 0 0
1 0 0 0
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Update Fish Status [ motivation ]</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Fish Status [ motivation ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Fish Status [ motivation ]</accumulator>
                    <function>HexSimDomain.ExpressionUpdaterFunction</function>
                    <parameter>Cond ( "Time Step" - "Time [ exit ]" , 1 , 0 )</parameter>
                    <parameter>0</parameter>
                  </updaterFunction>
                </accumulateEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Update Fish Status [ behavior ]</name>
                  <description />
                  <qualifiedName>Transition ( Update Fish Status [ behavior ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Fish Status [ behavior ]</transitionTrait>
                  <trait>Fish Status [ terminus ]</trait>
                  <trait>Fish Status [ behavior ]</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>6</rows>
                    <columns>3</columns>
                    <matrices>
1 0 0
0 1 0
0 0 1
0 0 1
0 0 1
0 0 1
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Update Time at Terminus</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Time at Terminus )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ terminus ]</trait>
                    <traitCombinations>0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Time [ spent at terminus ]</accumulator>
                      <function>HexSimDomain.IncrementUpdaterFunction</function>
                      <parameter>1</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Time [ at terminus ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Time [ arrived at terminus ]</accumulator>
                      <function>HexSimDomain.TimeStepUpdaterFunction</function>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Hours in Cold Water</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Hours in Cold Water )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>0 1 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( 'Refuge Hold Fraction [ chinook ]' - Rand() , Rand() * ( 'Refuge Hold Max Hours [ chinook ]' - 49 ) + 49, Rand() * ( 48 - 4 ) + 4 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Floor ( "Hours in CWR [ event max ]" + 0.5 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>1</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in Cold Water [ episodic ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>0 1 0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Hours in Cold Water [ total ]</accumulator>
                      <function>HexSimDomain.IncrementUpdaterFunction</function>
                      <parameter>1</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in Cold Water [ episodic ]</accumulator>
                      <function>HexSimDomain.IncrementUpdaterFunction</function>
                      <parameter>1</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 2-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>0 0 0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( 1 + "Hours in CWR [ event max ]" - "Hours in Cold Water [ episodic ]" , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 3-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>1 0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event max ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event switch ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Update Avoidance Counter</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Avoidance Counter )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>0 0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Refuge Avoidance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Refuge Avoidance Period [ chinook ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>1 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Refuge Avoidance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Max ( 0 , "Refuge Avoidance" - 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Update Temperature Variables</name>
              <description />
              <qualifiedName>Event Group ( Update Temperature Variables )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <accumulateEvent>
                  <name>Update Past Temperature</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Past Temperature )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ at time 3 ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Temperature [ at time 2 ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ at time 2 ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Temperature [ at time 1 ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Prepare for Data Lookup</name>
                  <description />
                  <qualifiedName>Accumulate ( Prepare for Data Lookup )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Data Column</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Time Step"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Data Row</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Trib and Plume ID [ post-movement ]" + 1</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <dataLookupEvent>
                  <name>Update Present Temperature</name>
                  <description />
                  <qualifiedName>Data Lookup ( Update Present Temperature )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>0</matrixCount>
                    <rows>3</rows>
                    <columns>0</columns>
                    <matrices />
                  </matrixSet>
                  <trait>Fish Status [ behavior ]</trait>
                  <traitCombinations>0 1 0</traitCombinations>
                  <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\River Temperature.csv</fileName>
                  <rowAccumulator>Data Row</rowAccumulator>
                  <columnAccumulator>Data Column</columnAccumulator>
                  <targetAccumulator>Temperature [ at time 1 ]</targetAccumulator>
                  <hasColumnHeader>False</hasColumnHeader>
                  <hasRowHeader>False</hasRowHeader>
                </dataLookupEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Update Mean Temperature</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Mean Temperature )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ mean ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>( "Temperature [ at time 1 ]" + "Temperature [ at time 2 ]" + "Temperature [ at time 3 ]" ) / 3</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Thermal Gradient Switch</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Thermal Gradient Switch )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Thermal Gradient [ switch ]</accumulator>
                    <function>HexSimDomain.ClearUpdaterFunction</function>
                  </updaterFunction>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Thermal Gradient [ switch ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Gradient [ distance to refuges ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Thermal Gradient [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Thermal Gradient [ switch ]" - 'Max CWR Detection Distance' , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Impose Temperature-based Mortality</name>
              <description />
              <qualifiedName>Event Group ( Impose Temperature-based Mortality )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <accumulateEvent>
                  <name>Update 24 Hour Temperature</name>
                  <description />
                  <qualifiedName>Accumulate ( Update 24 Hour Temperature )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Temperature [ 24 hour counter ]</accumulator>
                    <function>HexSimDomain.IncrementUpdaterFunction</function>
                    <parameter>1</parameter>
                  </updaterFunction>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Temperature [ 24 hour counter ]</trait>
                    <traitCombinations>0 0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour sum ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour mean ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour counter ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Temperature [ 24 hour counter ]</trait>
                    <traitCombinations>1 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour counter ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Temperature [ 24 hour counter ]" , "Temperature [ 24 hour counter ]" , 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour sum ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Temperature [ 24 hour sum ]" + "Temperature [ at time 1 ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 2-->
                  <stratifiedUpdaterFunctions>
                    <trait>Temperature [ 24 hour counter ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour mean ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Temperature [ 24 hour sum ]" / 24</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Data Column</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>2</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Data Row</accumulator>
                      <sourceTrait>Survival [ lookup ]</sourceTrait>
                      <function>HexSimDomain.TraitIdUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Data Row</accumulator>
                      <function>HexSimDomain.IncrementUpdaterFunction</function>
                      <parameter>1</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 3-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>1 0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour sum ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour mean ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour counter ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <dataLookupEvent>
                  <name>Impose Mortality [ temperature ]</name>
                  <description />
                  <qualifiedName>Data Lookup ( Impose Mortality [ temperature ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>0</matrixCount>
                    <rows>9</rows>
                    <columns>0</columns>
                    <matrices />
                  </matrixSet>
                  <trait>Temperature [ 24 hour counter ]</trait>
                  <trait>Fish Status [ behavior ]</trait>
                  <traitCombinations>0 0 0 0 1 0 0 0 0</traitCombinations>
                  <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\Temperature vs Survival.csv</fileName>
                  <rowAccumulator>Data Row</rowAccumulator>
                  <columnAccumulator>Data Column</columnAccumulator>
                  <targetAccumulator>Survival [ temperature ]</targetAccumulator>
                  <hasColumnHeader>True</hasColumnHeader>
                  <hasRowHeader>False</hasRowHeader>
                </dataLookupEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Temperature-Based Survival</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Temperature-Based Survival )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Survival [ switch ]</accumulator>
                    <function>HexSimDomain.ExpressionUpdaterFunction</function>
                    <parameter>1</parameter>
                    <parameter>0</parameter>
                  </updaterFunction>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Temperature [ 24 hour counter ]</trait>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 0 0 0 1 0 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Survival [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Survival [ temperature ]" - Rand() , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <dataProbeEvent>
                  <name>Record Dying Fish Stastics</name>
                  <description />
                  <qualifiedName>Data Probe ( Record Dying Fish Stastics )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <trait>Survival [ switch ]</trait>
                  <traitCombinations>1 0</traitCombinations>
                  <accumulator>Time [ entry ]</accumulator>
                  <accumulator>Time [ exit ]</accumulator>
                  <accumulator>Time [ in system ]</accumulator>
                  <accumulator>Time [ remaining ]</accumulator>
                  <accumulator>Hours in Cold Water [ total ]</accumulator>
                  <accumulator>Initial Weight</accumulator>
                  <accumulator>Initial Energy Density</accumulator>
                  <accumulator>Fitness [ weight ]</accumulator>
                  <accumulator>Fitness [ energy density ]</accumulator>
                  <accumulator>Fitness [ energy ]</accumulator>
                  <accumulator>Fitness [ mass used in respiration ]</accumulator>
                  <accumulator>Fishing Pressure</accumulator>
                  <accumulator>Temperature [ at time 1 ]</accumulator>
                  <accumulator>Temperature [ mean ]</accumulator>
                </dataProbeEvent>
              </event>
              <event>
                <survivalEvent>
                  <name>Impose Mortality [ temperature ]</name>
                  <description />
                  <qualifiedName>Survival ( Impose Mortality [ temperature ] )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <logParams logSurvival="true" logSurvivalDeaths="true" />
                  <useAccumulator>true</useAccumulator>
                  <survivalAccumulator>Survival [ switch ]</survivalAccumulator>
                </survivalEvent>
              </event>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Impose Fishing Pressure</name>
              <description />
              <qualifiedName>Event Group ( Impose Fishing Pressure )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <eventGroupEvent>
                  <name>Catch and Keep</name>
                  <description />
                  <qualifiedName>Event Group ( Catch and Keep )</qualifiedName>
                  <populationName />
                  <permanent>false</permanent>
                  <iterations>1</iterations>
                  <event>
                    <accumulateEvent>
                      <name>Prepare for Data Lookup</name>
                      <description />
                      <qualifiedName>Accumulate ( Prepare for Data Lookup )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Fish Status [ behavior ]</trait>
                        <traitCombinations>0 1 0</traitCombinations>
                        <updaterFunction>
                          <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                          <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                          <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Data Row</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>"Trib and Plume ID [ post-movement ]" + 1</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Data Column</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>2</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <dataLookupEvent>
                      <name>Set Catch and Keep Probability</name>
                      <description />
                      <qualifiedName>Data Lookup ( Set Catch and Keep Probability )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <matrixSet transposed="false" rowsReversed="false">
                        <matrixCount>0</matrixCount>
                        <rows>3</rows>
                        <columns>0</columns>
                        <matrices />
                      </matrixSet>
                      <trait>Fish Status [ behavior ]</trait>
                      <traitCombinations>0 1 0</traitCombinations>
                      <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\Catch and Keep.csv</fileName>
                      <rowAccumulator>Data Row</rowAccumulator>
                      <columnAccumulator>Data Column</columnAccumulator>
                      <targetAccumulator>Fishing Pressure</targetAccumulator>
                      <hasColumnHeader>True</hasColumnHeader>
                      <hasRowHeader>False</hasRowHeader>
                    </dataLookupEvent>
                  </event>
                  <event>
                    <accumulateEvent>
                      <name>Impose Mortality [ fishing ]</name>
                      <description />
                      <qualifiedName>Accumulate ( Impose Mortality [ fishing ] )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <!--Global Updater Functions-->
                      <updaterFunction>
                        <accumulator>Survival [ switch ]</accumulator>
                        <function>HexSimDomain.ExpressionUpdaterFunction</function>
                        <parameter>1</parameter>
                        <parameter>0</parameter>
                      </updaterFunction>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Fish Status [ behavior ]</trait>
                        <traitCombinations>0 1 0</traitCombinations>
                        <updaterFunction>
                          <accumulator>Survival [ switch ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>Cond ( "Fishing Pressure" / 100 - Rand() , 0 , 1 )</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <dataProbeEvent>
                      <name>Record Dying Fish Stastics</name>
                      <description />
                      <qualifiedName>Data Probe ( Record Dying Fish Stastics )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <trait>Survival [ switch ]</trait>
                      <traitCombinations>1 0</traitCombinations>
                      <accumulator>Time [ entry ]</accumulator>
                      <accumulator>Time [ exit ]</accumulator>
                      <accumulator>Time [ in system ]</accumulator>
                      <accumulator>Time [ remaining ]</accumulator>
                      <accumulator>Hours in Cold Water [ total ]</accumulator>
                      <accumulator>Initial Weight</accumulator>
                      <accumulator>Initial Energy Density</accumulator>
                      <accumulator>Fitness [ weight ]</accumulator>
                      <accumulator>Fitness [ energy density ]</accumulator>
                      <accumulator>Fitness [ energy ]</accumulator>
                      <accumulator>Fitness [ mass used in respiration ]</accumulator>
                      <accumulator>Fishing Pressure</accumulator>
                      <accumulator>Temperature [ at time 1 ]</accumulator>
                      <accumulator>Temperature [ mean ]</accumulator>
                    </dataProbeEvent>
                  </event>
                  <event>
                    <survivalEvent>
                      <name>Impose Mortality [ fishing ]</name>
                      <description />
                      <qualifiedName>Survival ( Impose Mortality [ fishing ] )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <logParams logSurvival="true" logSurvivalDeaths="true" />
                      <useAccumulator>true</useAccumulator>
                      <survivalAccumulator>Survival [ switch ]</survivalAccumulator>
                    </survivalEvent>
                  </event>
                </eventGroupEvent>
              </event>
              <event>
                <eventGroupEvent>
                  <name>Catch and Release</name>
                  <description />
                  <qualifiedName>Event Group ( Catch and Release )</qualifiedName>
                  <populationName />
                  <permanent>false</permanent>
                  <iterations>1</iterations>
                  <event>
                    <accumulateEvent>
                      <name>Prepare for Data Lookup</name>
                      <description />
                      <qualifiedName>Accumulate ( Prepare for Data Lookup )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Fish Status [ behavior ]</trait>
                        <traitCombinations>0 1 0</traitCombinations>
                        <updaterFunction>
                          <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                          <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                          <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Data Row</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>"Trib and Plume ID [ post-movement ]" + 1</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Data Column</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>2</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <dataLookupEvent>
                      <name>Set Catch and Release Probability</name>
                      <description />
                      <qualifiedName>Data Lookup ( Set Catch and Release Probability )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <matrixSet transposed="false" rowsReversed="false">
                        <matrixCount>0</matrixCount>
                        <rows>3</rows>
                        <columns>0</columns>
                        <matrices />
                      </matrixSet>
                      <trait>Fish Status [ behavior ]</trait>
                      <traitCombinations>0 1 0</traitCombinations>
                      <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\Catch and Release.csv</fileName>
                      <rowAccumulator>Data Row</rowAccumulator>
                      <columnAccumulator>Data Column</columnAccumulator>
                      <targetAccumulator>Fishing Pressure</targetAccumulator>
                      <hasColumnHeader>True</hasColumnHeader>
                      <hasRowHeader>False</hasRowHeader>
                    </dataLookupEvent>
                  </event>
                  <event>
                    <accumulateEvent>
                      <name>Mark Fish Caught and Released</name>
                      <description />
                      <qualifiedName>Accumulate ( Mark Fish Caught and Released )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <!--Global Updater Functions-->
                      <updaterFunction>
                        <accumulator>Catch and Release [ switch ]</accumulator>
                        <function>HexSimDomain.ClearUpdaterFunction</function>
                      </updaterFunction>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Fish Status [ behavior ]</trait>
                        <traitCombinations>0 1 0</traitCombinations>
                        <updaterFunction>
                          <accumulator>Catch and Release [ switch ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>Cond ( "Fishing Pressure" / 100 - Rand() , 1 , 0 )</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <accumulateEvent>
                      <name>Energetic Cost of Catch and Release</name>
                      <description />
                      <qualifiedName>Accumulate ( Energetic Cost of Catch and Release )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <!--Global Updater Functions-->
                      <updaterFunction>
                        <accumulator>Catch and Release [ cost ]</accumulator>
                        <function>HexSimDomain.ClearUpdaterFunction</function>
                      </updaterFunction>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Catch and Release [ switch ]</trait>
                        <traitCombinations>0 1</traitCombinations>
                        <updaterFunction>
                          <accumulator>Catch and Release [ cost ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>1000</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Fitness [ energy density ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>Max ( "Fitness [ energy density ]" - "Catch and Release [ cost ]" , 0 )</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <accumulateEvent>
                      <name>Impose Mortality [ fishing ]</name>
                      <description />
                      <qualifiedName>Accumulate ( Impose Mortality [ fishing ] )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <!--Global Updater Functions-->
                      <updaterFunction>
                        <accumulator>Survival [ switch ]</accumulator>
                        <function>HexSimDomain.ExpressionUpdaterFunction</function>
                        <parameter>1</parameter>
                        <parameter>0</parameter>
                      </updaterFunction>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Catch and Release [ switch ]</trait>
                        <traitCombinations>0 1</traitCombinations>
                        <updaterFunction>
                          <accumulator>Survival [ switch ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>Cond ( Rand() - Max ( 0 , ( 0.3 / 5.0 ) * "Temperature [ mean ]" - 1.08 ) , 1 , 0 )</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <dataProbeEvent>
                      <name>Record Dying Fish Stastics</name>
                      <description />
                      <qualifiedName>Data Probe ( Record Dying Fish Stastics )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <trait>Survival [ switch ]</trait>
                      <traitCombinations>1 0</traitCombinations>
                      <accumulator>Time [ entry ]</accumulator>
                      <accumulator>Time [ exit ]</accumulator>
                      <accumulator>Time [ in system ]</accumulator>
                      <accumulator>Time [ remaining ]</accumulator>
                      <accumulator>Hours in Cold Water [ total ]</accumulator>
                      <accumulator>Initial Weight</accumulator>
                      <accumulator>Initial Energy Density</accumulator>
                      <accumulator>Fitness [ weight ]</accumulator>
                      <accumulator>Fitness [ energy density ]</accumulator>
                      <accumulator>Fitness [ energy ]</accumulator>
                      <accumulator>Fitness [ mass used in respiration ]</accumulator>
                      <accumulator>Fishing Pressure</accumulator>
                      <accumulator>Temperature [ at time 1 ]</accumulator>
                      <accumulator>Temperature [ mean ]</accumulator>
                    </dataProbeEvent>
                  </event>
                  <event>
                    <survivalEvent>
                      <name>Impose Mortality [ fishing ]</name>
                      <description />
                      <qualifiedName>Survival ( Impose Mortality [ fishing ] )</qualifiedName>
                      <populationName>Chinook</populationName>
                      <permanent>false</permanent>
                      <logParams logSurvival="true" logSurvivalDeaths="true" />
                      <useAccumulator>true</useAccumulator>
                      <survivalAccumulator>Survival [ switch ]</survivalAccumulator>
                    </survivalEvent>
                  </event>
                </eventGroupEvent>
              </event>
            </eventGroupEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Update State Variables [ steelhead ]</name>
          <description />
          <qualifiedName>Event Group ( Update State Variables [ steelhead ] )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <eventGroupEvent>
              <name>Update Space and Time Variables</name>
              <description />
              <qualifiedName>Event Group ( Update Space and Time Variables )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <accumulateEvent>
                  <name>Update River Kilometer Data</name>
                  <description />
                  <qualifiedName>Accumulate ( Update River Kilometer Data )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>River Kilometer</accumulator>
                      <function>HexSimDomain.QuantifyLocationUpdaterFunction</function>
                      <parameter>1</parameter>
                      <accumulateSpatialData>Gradient [ upstream ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>River Kilometer</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"River Kilometer" * 'Hexagon Width'  / 1000</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Terminus Status</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Terminus Status )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Fish Status [ terminus ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ terminus ]</accumulateSpatialData>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Post-Movement Refuge ID</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Post-Movement Refuge ID )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Update Refuge History</name>
                  <description />
                  <qualifiedName>Transition ( Update Refuge History )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Refuge History</transitionTrait>
                  <trait>Refuge Status [ pre-movement ]</trait>
                  <trait>Refuge Status [ post-movement ]</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>4</rows>
                    <columns>4</columns>
                    <matrices>
1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Finalize Refuge History</name>
                  <description />
                  <qualifiedName>Transition ( Finalize Refuge History )</qualifiedName>
                  <populationName>Chinook</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Refuge History</transitionTrait>
                  <trait>Time [ at terminus ]</trait>
                  <trait>Refuge History</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>12</rows>
                    <columns>4</columns>
                    <matrices>
1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1
1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1
1 0 0 0
1 0 0 0
1 0 0 0
1 0 0 0
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Update Fish Status [ motivation ]</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Fish Status [ motivation ] )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Fish Status [ motivation ]</accumulator>
                    <function>HexSimDomain.ExpressionUpdaterFunction</function>
                    <parameter>Cond ( "Time Step" - "Time [ exit ]" , 1 , 0 )</parameter>
                    <parameter>0</parameter>
                  </updaterFunction>
                </accumulateEvent>
              </event>
              <event>
                <transitionEvent>
                  <name>Update Fish Status [ behavior ]</name>
                  <description />
                  <qualifiedName>Transition ( Update Fish Status [ behavior ] )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <transitionTrait>Fish Status [ behavior ]</transitionTrait>
                  <trait>Fish Status [ terminus ]</trait>
                  <trait>Fish Status [ behavior ]</trait>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>1</matrixCount>
                    <rows>6</rows>
                    <columns>3</columns>
                    <matrices>
1 0 0
0 1 0
0 0 1
0 0 1
0 0 1
0 0 1
</matrices>
                  </matrixSet>
                </transitionEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Update Time at Terminus</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Time at Terminus )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ terminus ]</trait>
                    <traitCombinations>0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Time [ spent at terminus ]</accumulator>
                      <function>HexSimDomain.IncrementUpdaterFunction</function>
                      <parameter>1</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Time [ at terminus ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Time [ arrived at terminus ]</accumulator>
                      <function>HexSimDomain.TimeStepUpdaterFunction</function>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Hours in Cold Water</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Hours in Cold Water )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>0 1 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( 'Refuge Hold Fraction [ steelhead ]' - Rand() , Rand() * ( 'Refuge Hold Max Hours [ steelhead ]' - 25 ) + 25 , Rand() * ( 24 - 4 ) + 4 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event max ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Floor ( "Hours in CWR [ event max ]" + 0.5 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>1</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in Cold Water [ episodic ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>0 1 0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Hours in Cold Water [ total ]</accumulator>
                      <function>HexSimDomain.IncrementUpdaterFunction</function>
                      <parameter>1</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in Cold Water [ episodic ]</accumulator>
                      <function>HexSimDomain.IncrementUpdaterFunction</function>
                      <parameter>1</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 2-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>0 0 0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( 1 + "Hours in CWR [ event max ]" - "Hours in Cold Water [ episodic ]" , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 3-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>1 0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event max ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Hours in CWR [ event switch ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Update Avoidance Counter</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Avoidance Counter )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>0 0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Refuge Avoidance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>'Refuge Avoidance Period [ steelhead ]'</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Refuge History</trait>
                    <traitCombinations>1 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Refuge Avoidance</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Max ( 0 , "Refuge Avoidance" - 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Update Temperature Variables</name>
              <description />
              <qualifiedName>Event Group ( Update Temperature Variables )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <accumulateEvent>
                  <name>Update Past Temperature</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Past Temperature )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ at time 3 ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Temperature [ at time 2 ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ at time 2 ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Temperature [ at time 1 ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Prepare for Data Lookup</name>
                  <description />
                  <qualifiedName>Accumulate ( Prepare for Data Lookup )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Data Column</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Time Step"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Data Row</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Trib and Plume ID [ post-movement ]" + 1</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <dataLookupEvent>
                  <name>Update Present Temperature</name>
                  <description />
                  <qualifiedName>Data Lookup ( Update Present Temperature )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>0</matrixCount>
                    <rows>3</rows>
                    <columns>0</columns>
                    <matrices />
                  </matrixSet>
                  <trait>Fish Status [ behavior ]</trait>
                  <traitCombinations>0 1 0</traitCombinations>
                  <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\River Temperature.csv</fileName>
                  <rowAccumulator>Data Row</rowAccumulator>
                  <columnAccumulator>Data Column</columnAccumulator>
                  <targetAccumulator>Temperature [ at time 1 ]</targetAccumulator>
                  <hasColumnHeader>False</hasColumnHeader>
                  <hasRowHeader>False</hasRowHeader>
                </dataLookupEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Update Mean Temperature</name>
                  <description />
                  <qualifiedName>Accumulate ( Update Mean Temperature )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ mean ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>( "Temperature [ at time 1 ]" + "Temperature [ at time 2 ]" + "Temperature [ at time 3 ]" ) / 3</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Thermal Gradient Switch</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Thermal Gradient Switch )</qualifiedName>
                  <displayColor>-1</displayColor>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Thermal Gradient [ switch ]</accumulator>
                    <function>HexSimDomain.ClearUpdaterFunction</function>
                  </updaterFunction>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Thermal Gradient [ switch ]</accumulator>
                      <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                      <accumulateSpatialData>Gradient [ distance to refuges ]</accumulateSpatialData>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Thermal Gradient [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Thermal Gradient [ switch ]" - 'Max CWR Detection Distance' , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Impose Temperature-based Mortality</name>
              <description />
              <qualifiedName>Event Group ( Impose Temperature-based Mortality )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <accumulateEvent>
                  <name>Update 24 Hour Temperature</name>
                  <description />
                  <qualifiedName>Accumulate ( Update 24 Hour Temperature )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Temperature [ 24 hour counter ]</accumulator>
                    <function>HexSimDomain.IncrementUpdaterFunction</function>
                    <parameter>1</parameter>
                  </updaterFunction>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Temperature [ 24 hour counter ]</trait>
                    <traitCombinations>0 0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour sum ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour mean ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour counter ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 1-->
                  <stratifiedUpdaterFunctions>
                    <trait>Temperature [ 24 hour counter ]</trait>
                    <traitCombinations>1 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour counter ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Temperature [ 24 hour counter ]" , "Temperature [ 24 hour counter ]" , 1 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour sum ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Temperature [ 24 hour sum ]" + "Temperature [ at time 1 ]"</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 2-->
                  <stratifiedUpdaterFunctions>
                    <trait>Temperature [ 24 hour counter ]</trait>
                    <traitCombinations>0 1 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour mean ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>"Temperature [ 24 hour sum ]" / 24</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Data Column</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>2</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Data Row</accumulator>
                      <sourceTrait>Survival [ lookup ]</sourceTrait>
                      <function>HexSimDomain.TraitIdUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Data Row</accumulator>
                      <function>HexSimDomain.IncrementUpdaterFunction</function>
                      <parameter>1</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                  <!--Stratified Updater Functions Group 3-->
                  <stratifiedUpdaterFunctions>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>1 0 1</traitCombinations>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour sum ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour mean ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                    <updaterFunction>
                      <accumulator>Temperature [ 24 hour counter ]</accumulator>
                      <function>HexSimDomain.ClearUpdaterFunction</function>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <dataLookupEvent>
                  <name>Impose Mortality [ temperature ]</name>
                  <description />
                  <qualifiedName>Data Lookup ( Impose Mortality [ temperature ] )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <matrixSet transposed="false" rowsReversed="false">
                    <matrixCount>0</matrixCount>
                    <rows>9</rows>
                    <columns>0</columns>
                    <matrices />
                  </matrixSet>
                  <trait>Temperature [ 24 hour counter ]</trait>
                  <trait>Fish Status [ behavior ]</trait>
                  <traitCombinations>0 0 0 0 1 0 0 0 0</traitCombinations>
                  <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\Temperature vs Survival.csv</fileName>
                  <rowAccumulator>Data Row</rowAccumulator>
                  <columnAccumulator>Data Column</columnAccumulator>
                  <targetAccumulator>Survival [ temperature ]</targetAccumulator>
                  <hasColumnHeader>True</hasColumnHeader>
                  <hasRowHeader>False</hasRowHeader>
                </dataLookupEvent>
              </event>
              <event>
                <accumulateEvent>
                  <name>Set Temperature-Based Survival</name>
                  <description />
                  <qualifiedName>Accumulate ( Set Temperature-Based Survival )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <!--Global Updater Functions-->
                  <updaterFunction>
                    <accumulator>Survival [ switch ]</accumulator>
                    <function>HexSimDomain.ExpressionUpdaterFunction</function>
                    <parameter>1</parameter>
                    <parameter>0</parameter>
                  </updaterFunction>
                  <!--Stratified Updater Functions Group 0-->
                  <stratifiedUpdaterFunctions>
                    <trait>Temperature [ 24 hour counter ]</trait>
                    <trait>Fish Status [ behavior ]</trait>
                    <traitCombinations>0 0 0 0 1 0 0 0 0</traitCombinations>
                    <updaterFunction>
                      <accumulator>Survival [ switch ]</accumulator>
                      <function>HexSimDomain.ExpressionUpdaterFunction</function>
                      <parameter>Cond ( "Survival [ temperature ]" - Rand() , 1 , 0 )</parameter>
                      <parameter>0</parameter>
                    </updaterFunction>
                  </stratifiedUpdaterFunctions>
                </accumulateEvent>
              </event>
              <event>
                <dataProbeEvent>
                  <name>Record Dying Fish Stastics</name>
                  <description />
                  <qualifiedName>Data Probe ( Record Dying Fish Stastics )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <trait>Survival [ switch ]</trait>
                  <traitCombinations>1 0</traitCombinations>
                  <accumulator>Time [ entry ]</accumulator>
                  <accumulator>Time [ exit ]</accumulator>
                  <accumulator>Time [ in system ]</accumulator>
                  <accumulator>Time [ remaining ]</accumulator>
                  <accumulator>Hours in Cold Water [ total ]</accumulator>
                  <accumulator>Initial Weight</accumulator>
                  <accumulator>Initial Energy Density</accumulator>
                  <accumulator>Fitness [ weight ]</accumulator>
                  <accumulator>Fitness [ energy density ]</accumulator>
                  <accumulator>Fitness [ energy ]</accumulator>
                  <accumulator>Fitness [ mass used in respiration ]</accumulator>
                  <accumulator>Fishing Pressure</accumulator>
                  <accumulator>Temperature [ at time 1 ]</accumulator>
                  <accumulator>Temperature [ mean ]</accumulator>
                </dataProbeEvent>
              </event>
              <event>
                <survivalEvent>
                  <name>Impose Mortality [ temperature ]</name>
                  <description />
                  <qualifiedName>Survival ( Impose Mortality [ temperature ] )</qualifiedName>
                  <populationName>Steelhead</populationName>
                  <permanent>false</permanent>
                  <logParams logSurvival="true" logSurvivalDeaths="true" />
                  <useAccumulator>true</useAccumulator>
                  <survivalAccumulator>Survival [ switch ]</survivalAccumulator>
                </survivalEvent>
              </event>
            </eventGroupEvent>
          </event>
          <event>
            <eventGroupEvent>
              <name>Impose Fishing Pressure</name>
              <description />
              <qualifiedName>Event Group ( Impose Fishing Pressure )</qualifiedName>
              <populationName />
              <permanent>false</permanent>
              <iterations>1</iterations>
              <event>
                <eventGroupEvent>
                  <name>Catch and Keep</name>
                  <description />
                  <qualifiedName>Event Group ( Catch and Keep )</qualifiedName>
                  <populationName />
                  <permanent>false</permanent>
                  <iterations>1</iterations>
                  <event>
                    <accumulateEvent>
                      <name>Prepare for Data Lookup</name>
                      <description />
                      <qualifiedName>Accumulate ( Prepare for Data Lookup )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Fish Status [ behavior ]</trait>
                        <traitCombinations>0 1 0</traitCombinations>
                        <updaterFunction>
                          <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                          <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                          <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Data Row</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>"Trib and Plume ID [ post-movement ]" + 1</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Data Column</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>2</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <dataLookupEvent>
                      <name>Set Catch and Keep Probability</name>
                      <description />
                      <qualifiedName>Data Lookup ( Set Catch and Keep Probability )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <matrixSet transposed="false" rowsReversed="false">
                        <matrixCount>0</matrixCount>
                        <rows>3</rows>
                        <columns>0</columns>
                        <matrices />
                      </matrixSet>
                      <trait>Fish Status [ behavior ]</trait>
                      <traitCombinations>0 1 0</traitCombinations>
                      <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\Catch and Keep.csv</fileName>
                      <rowAccumulator>Data Row</rowAccumulator>
                      <columnAccumulator>Data Column</columnAccumulator>
                      <targetAccumulator>Fishing Pressure</targetAccumulator>
                      <hasColumnHeader>True</hasColumnHeader>
                      <hasRowHeader>False</hasRowHeader>
                    </dataLookupEvent>
                  </event>
                  <event>
                    <accumulateEvent>
                      <name>Impose Mortality [ fishing ]</name>
                      <description />
                      <qualifiedName>Accumulate ( Impose Mortality [ fishing ] )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <!--Global Updater Functions-->
                      <updaterFunction>
                        <accumulator>Survival [ switch ]</accumulator>
                        <function>HexSimDomain.ExpressionUpdaterFunction</function>
                        <parameter>1</parameter>
                        <parameter>0</parameter>
                      </updaterFunction>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Fish Status [ behavior ]</trait>
                        <traitCombinations>0 1 0</traitCombinations>
                        <updaterFunction>
                          <accumulator>Survival [ switch ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>Cond ( "Fishing Pressure" / 100 - Rand() , 0 , 1 )</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <dataProbeEvent>
                      <name>Record Dying Fish Stastics</name>
                      <description />
                      <qualifiedName>Data Probe ( Record Dying Fish Stastics )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <trait>Survival [ switch ]</trait>
                      <traitCombinations>1 0</traitCombinations>
                      <accumulator>Time [ entry ]</accumulator>
                      <accumulator>Time [ exit ]</accumulator>
                      <accumulator>Time [ in system ]</accumulator>
                      <accumulator>Time [ remaining ]</accumulator>
                      <accumulator>Hours in Cold Water [ total ]</accumulator>
                      <accumulator>Initial Weight</accumulator>
                      <accumulator>Initial Energy Density</accumulator>
                      <accumulator>Fitness [ weight ]</accumulator>
                      <accumulator>Fitness [ energy density ]</accumulator>
                      <accumulator>Fitness [ energy ]</accumulator>
                      <accumulator>Fitness [ mass used in respiration ]</accumulator>
                      <accumulator>Fishing Pressure</accumulator>
                      <accumulator>Temperature [ at time 1 ]</accumulator>
                      <accumulator>Temperature [ mean ]</accumulator>
                    </dataProbeEvent>
                  </event>
                  <event>
                    <survivalEvent>
                      <name>Impose Mortality [ fishing ]</name>
                      <description />
                      <qualifiedName>Survival ( Impose Mortality [ fishing ] )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <logParams logSurvival="true" logSurvivalDeaths="true" />
                      <useAccumulator>true</useAccumulator>
                      <survivalAccumulator>Survival [ switch ]</survivalAccumulator>
                    </survivalEvent>
                  </event>
                </eventGroupEvent>
              </event>
              <event>
                <eventGroupEvent>
                  <name>Catch and Release</name>
                  <description />
                  <qualifiedName>Event Group ( Catch and Release )</qualifiedName>
                  <populationName />
                  <permanent>false</permanent>
                  <iterations>1</iterations>
                  <event>
                    <accumulateEvent>
                      <name>Prepare for Data Lookup</name>
                      <description />
                      <qualifiedName>Accumulate ( Prepare for Data Lookup )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Fish Status [ behavior ]</trait>
                        <traitCombinations>0 1 0</traitCombinations>
                        <updaterFunction>
                          <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
                          <function>HexSimDomain.IndividualLocationsUpdaterFunction</function>
                          <accumulateSpatialData>Special Sites [ tribs and plumes ]</accumulateSpatialData>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Data Row</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>"Trib and Plume ID [ post-movement ]" + 1</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Data Column</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>2</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <dataLookupEvent>
                      <name>Set Catch and Release Probability</name>
                      <description />
                      <qualifiedName>Data Lookup ( Set Catch and Release Probability )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <matrixSet transposed="false" rowsReversed="false">
                        <matrixCount>0</matrixCount>
                        <rows>3</rows>
                        <columns>0</columns>
                        <matrices />
                      </matrixSet>
                      <trait>Fish Status [ behavior ]</trait>
                      <traitCombinations>0 1 0</traitCombinations>
                      <fileName>D:\HexSim_Models\Fish Model\Analysis\Data Lookup\Catch and Release.csv</fileName>
                      <rowAccumulator>Data Row</rowAccumulator>
                      <columnAccumulator>Data Column</columnAccumulator>
                      <targetAccumulator>Fishing Pressure</targetAccumulator>
                      <hasColumnHeader>True</hasColumnHeader>
                      <hasRowHeader>False</hasRowHeader>
                    </dataLookupEvent>
                  </event>
                  <event>
                    <accumulateEvent>
                      <name>Mark Fish Caught and Released</name>
                      <description />
                      <qualifiedName>Accumulate ( Mark Fish Caught and Released )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <!--Global Updater Functions-->
                      <updaterFunction>
                        <accumulator>Catch and Release [ switch ]</accumulator>
                        <function>HexSimDomain.ClearUpdaterFunction</function>
                      </updaterFunction>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Fish Status [ behavior ]</trait>
                        <traitCombinations>0 1 0</traitCombinations>
                        <updaterFunction>
                          <accumulator>Catch and Release [ switch ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>Cond ( "Fishing Pressure" / 100 - Rand() , 1 , 0 )</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <accumulateEvent>
                      <name>Energetic Cost of Catch and Release</name>
                      <description />
                      <qualifiedName>Accumulate ( Energetic Cost of Catch and Release )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <!--Global Updater Functions-->
                      <updaterFunction>
                        <accumulator>Catch and Release [ cost ]</accumulator>
                        <function>HexSimDomain.ClearUpdaterFunction</function>
                      </updaterFunction>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Catch and Release [ switch ]</trait>
                        <traitCombinations>0 1</traitCombinations>
                        <updaterFunction>
                          <accumulator>Catch and Release [ cost ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>1000</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                        <updaterFunction>
                          <accumulator>Fitness [ energy density ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>Max ( "Fitness [ energy density ]" - "Catch and Release [ cost ]" , 0 )</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <accumulateEvent>
                      <name>Impose Mortality [ fishing ]</name>
                      <description />
                      <qualifiedName>Accumulate ( Impose Mortality [ fishing ] )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <!--Global Updater Functions-->
                      <updaterFunction>
                        <accumulator>Survival [ switch ]</accumulator>
                        <function>HexSimDomain.ExpressionUpdaterFunction</function>
                        <parameter>1</parameter>
                        <parameter>0</parameter>
                      </updaterFunction>
                      <!--Stratified Updater Functions Group 0-->
                      <stratifiedUpdaterFunctions>
                        <trait>Catch and Release [ switch ]</trait>
                        <traitCombinations>0 1</traitCombinations>
                        <updaterFunction>
                          <accumulator>Survival [ switch ]</accumulator>
                          <function>HexSimDomain.ExpressionUpdaterFunction</function>
                          <parameter>Cond ( Rand() - Max ( 0 , ( 0.3 / 5.0 ) * "Temperature [ mean ]" - 1.08 ) , 1 , 0 )</parameter>
                          <parameter>0</parameter>
                        </updaterFunction>
                      </stratifiedUpdaterFunctions>
                    </accumulateEvent>
                  </event>
                  <event>
                    <dataProbeEvent>
                      <name>Record Dying Fish Stastics</name>
                      <description />
                      <qualifiedName>Data Probe ( Record Dying Fish Stastics )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <trait>Survival [ switch ]</trait>
                      <traitCombinations>1 0</traitCombinations>
                      <accumulator>Time [ entry ]</accumulator>
                      <accumulator>Time [ exit ]</accumulator>
                      <accumulator>Time [ in system ]</accumulator>
                      <accumulator>Time [ remaining ]</accumulator>
                      <accumulator>Hours in Cold Water [ total ]</accumulator>
                      <accumulator>Initial Weight</accumulator>
                      <accumulator>Initial Energy Density</accumulator>
                      <accumulator>Fitness [ weight ]</accumulator>
                      <accumulator>Fitness [ energy density ]</accumulator>
                      <accumulator>Fitness [ energy ]</accumulator>
                      <accumulator>Fitness [ mass used in respiration ]</accumulator>
                      <accumulator>Fishing Pressure</accumulator>
                      <accumulator>Temperature [ at time 1 ]</accumulator>
                      <accumulator>Temperature [ mean ]</accumulator>
                    </dataProbeEvent>
                  </event>
                  <event>
                    <survivalEvent>
                      <name>Impose Mortality [ fishing ]</name>
                      <description />
                      <qualifiedName>Survival ( Impose Mortality [ fishing ] )</qualifiedName>
                      <populationName>Steelhead</populationName>
                      <permanent>false</permanent>
                      <logParams logSurvival="true" logSurvivalDeaths="true" />
                      <useAccumulator>true</useAccumulator>
                      <survivalAccumulator>Survival [ switch ]</survivalAccumulator>
                    </survivalEvent>
                  </event>
                </eventGroupEvent>
              </event>
            </eventGroupEvent>
          </event>
        </eventGroupEvent>
      </event>
    </eventGroupEvent>
  </event>
  <event>
    <eventGroupEvent>
      <name>Set Density Dependence</name>
      <description />
      <qualifiedName>Event Group ( Set Density Dependence )</qualifiedName>
      <populationName />
      <permanent>false</permanent>
      <iterations>1</iterations>
      <event>
        <moveEvent>
          <name>Set Explored Areas [ chinook ]</name>
          <description />
          <qualifiedName>Movement ( Set Explored Areas [ chinook ] )</qualifiedName>
          <populationName>Chinook</populationName>
          <permanent>false</permanent>
          <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
          <moveStrategy>resetExplored</moveStrategy>
          <zeroExplored>true</zeroExplored>
          <distanceAccumulator />
          <trait>Refuge Status [ post-movement ]</trait>
          <traitCombinations>0 1</traitCombinations>
          <walkUpGradient>false</walkUpGradient>
          <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
          <maximumLocalSearchArea>1</maximumLocalSearchArea>
          <maxExploreAccumulator />
          <explorationGoal>ExplorationOnlyFloatersAndGroups</explorationGoal>
          <explorationAlgorithm>Uniform</explorationAlgorithm>
          <explorationSetAffinity />
          <purgeAffinity>false</purgeAffinity>
          <priorityExplore>false</priorityExplore>
          <resourceThreshold>1</resourceThreshold>
        </moveEvent>
      </event>
      <event>
        <moveEvent>
          <name>Set Explored Areas [ steelhead ]</name>
          <description />
          <qualifiedName>Movement ( Set Explored Areas [ steelhead ] )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Steelhead</populationName>
          <permanent>false</permanent>
          <logParams logMoveDetails="true" logDispersalDeaths="true" logDispersalBarriers="true" logExplorationDeaths="true" logExplorationRange="true" logRangeColor="true" />
          <moveStrategy>resetExplored</moveStrategy>
          <zeroExplored>true</zeroExplored>
          <distanceAccumulator />
          <trait>Refuge Status [ post-movement ]</trait>
          <traitCombinations>0 1</traitCombinations>
          <walkUpGradient>false</walkUpGradient>
          <getAutoCorrelationFromSpatialData>false</getAutoCorrelationFromSpatialData>
          <maximumLocalSearchArea>1</maximumLocalSearchArea>
          <maxExploreAccumulator />
          <explorationGoal>ExplorationOnlyFloatersAndGroups</explorationGoal>
          <explorationAlgorithm>Uniform</explorationAlgorithm>
          <explorationSetAffinity />
          <purgeAffinity>false</purgeAffinity>
          <priorityExplore>false</priorityExplore>
          <resourceThreshold>1</resourceThreshold>
        </moveEvent>
      </event>
      <event>
        <accumulateEvent>
          <name>Clear Fish Counters</name>
          <description />
          <qualifiedName>Accumulate ( Clear Fish Counters )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Number of Fish [ chinook ]</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
          <updaterFunction>
            <accumulator>Fish Removed [ chinook ]</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
          <updaterFunction>
            <accumulator>Number of Fish [ steelhead ]</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
          <updaterFunction>
            <accumulator>Fish Removed [ steelhead ]</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
        </accumulateEvent>
      </event>
      <event>
        <accumulateEvent>
          <name>Clear Fish Selector [ chinook ]</name>
          <description />
          <qualifiedName>Accumulate ( Clear Fish Selector [ chinook ] )</qualifiedName>
          <populationName>Chinook</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Fish Selector</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
        </accumulateEvent>
      </event>
      <event>
        <accumulateEvent>
          <name>Clear Fish Selector [ steelhead ]</name>
          <description />
          <qualifiedName>Accumulate ( Clear Fish Selector [ steelhead ] )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Steelhead</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Fish Selector</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
        </accumulateEvent>
      </event>
      <event>
        <interactionEvent>
          <name>Identify Fish in Shallow Refuges</name>
          <description />
          <qualifiedName>Interaction ( Identify Fish in Shallow Refuges )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <logParams logInteractionDeaths="true" />
          <presence>explored</presence>
          <colocation type="always" />
          <interaction>
            <name>Check Refuge Usability [ chinook ]</name>
            <populationName>Chinook</populationName>
            <presence>explored</presence>
            <colocation type="always" />
            <encounterProbability>1</encounterProbability>
            <outcomes>
              <p1Traits>
                <trait>Effective Volume [ chinook ]</trait>
              </p1Traits>
              <p2Traits>
                <trait>Fish Selector</trait>
                <trait>Refuge Status [ post-movement ]</trait>
              </p2Traits>
              <outcome>
                <p1ComboIndex>0</p1ComboIndex>
                <p2ComboIndex>1</p2ComboIndex>
                <p1Changes />
                <p2Changes>
                  <change accumulator="Fish Selector" updater="assign" value="1" />
                </p2Changes>
                <outcomeProbability>1</outcomeProbability>
              </outcome>
            </outcomes>
          </interaction>
          <interaction>
            <name>Check Refuge Usability [ steelhead ]</name>
            <populationName>Steelhead</populationName>
            <presence>explored</presence>
            <colocation type="always" />
            <encounterProbability>1</encounterProbability>
            <outcomes>
              <p1Traits>
                <trait>Effective Volume [ steelhead ]</trait>
              </p1Traits>
              <p2Traits>
                <trait>Fish Selector</trait>
                <trait>Refuge Status [ post-movement ]</trait>
              </p2Traits>
              <outcome>
                <p1ComboIndex>0</p1ComboIndex>
                <p2ComboIndex>1</p2ComboIndex>
                <p1Changes />
                <p2Changes>
                  <change accumulator="Fish Selector" updater="assign" value="1" />
                </p2Changes>
                <outcomeProbability>1</outcomeProbability>
              </outcome>
            </outcomes>
          </interaction>
        </interactionEvent>
      </event>
      <event>
        <interactionEvent>
          <name>Count Fish in Refuges</name>
          <description />
          <qualifiedName>Interaction ( Count Fish in Refuges )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <logParams logInteractionDeaths="true" />
          <presence>explored</presence>
          <colocation type="always" />
          <interaction>
            <name>Count Chinook</name>
            <populationName>Chinook</populationName>
            <presence>explored</presence>
            <colocation type="always" />
            <encounterProbability>1</encounterProbability>
            <outcomes>
              <p1Traits />
              <p2Traits>
                <trait>Fish Selector</trait>
                <trait>Refuge Status [ post-movement ]</trait>
              </p2Traits>
              <outcome>
                <p1ComboIndex>0</p1ComboIndex>
                <p2ComboIndex>1</p2ComboIndex>
                <p1Changes>
                  <change accumulator="Number of Fish [ chinook ]" updater="increment" value="1" />
                </p1Changes>
                <p2Changes />
                <outcomeProbability>1</outcomeProbability>
              </outcome>
            </outcomes>
          </interaction>
          <interaction>
            <name>Count Steelhead</name>
            <populationName>Steelhead</populationName>
            <presence>explored</presence>
            <colocation type="always" />
            <encounterProbability>1</encounterProbability>
            <outcomes>
              <p1Traits />
              <p2Traits>
                <trait>Fish Selector</trait>
                <trait>Refuge Status [ post-movement ]</trait>
              </p2Traits>
              <outcome>
                <p1ComboIndex>0</p1ComboIndex>
                <p2ComboIndex>1</p2ComboIndex>
                <p1Changes>
                  <change accumulator="Number of Fish [ steelhead ]" updater="increment" value="1" />
                </p1Changes>
                <p2Changes />
                <outcomeProbability>1</outcomeProbability>
              </outcome>
            </outcomes>
          </interaction>
        </interactionEvent>
      </event>
      <event>
        <accumulateEvent>
          <name>Evaluate Density and Carrying Capacity</name>
          <description />
          <qualifiedName>Accumulate ( Evaluate Density and Carrying Capacity )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Number of Fish [ total ]</accumulator>
            <function>HexSimDomain.ExpressionUpdaterFunction</function>
            <parameter>"Number of Fish [ chinook ]" + "Number of Fish [ steelhead ]"</parameter>
            <parameter>0</parameter>
          </updaterFunction>
          <updaterFunction>
            <accumulator>Current Refuge Density</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
          <updaterFunction>
            <accumulator>Refuge Density Index</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
          <!--Stratified Updater Functions Group 0-->
          <stratifiedUpdaterFunctions>
            <trait>Refuge Occupancy</trait>
            <traitCombinations>0 1</traitCombinations>
            <updaterFunction>
              <accumulator>Current Refuge Density</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>"Number of Fish [ total ]" * "Number of Fish [ total ]" / ( "Effective Volume [ chinook ]" * "Number of Fish [ chinook ]" + "Effective Volume [ steelhead ]" * "Number of Fish [ steelhead ]" )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
            <updaterFunction>
              <accumulator>Refuge Density Index</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>Cond ( "Current Refuge Density" - 'Maximum Refuge Density' , 1 , 0 )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
          </stratifiedUpdaterFunctions>
        </accumulateEvent>
      </event>
      <event>
        <accumulateEvent>
          <name>Get Numbers of Fish to Retain</name>
          <description />
          <qualifiedName>Accumulate ( Get Numbers of Fish to Retain )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Fish to Retain [ chinook ]</accumulator>
            <function>HexSimDomain.ExpressionUpdaterFunction</function>
            <parameter>"Number of Fish [ chinook ]"</parameter>
            <parameter>0</parameter>
          </updaterFunction>
          <updaterFunction>
            <accumulator>Fish to Retain [ steelhead ]</accumulator>
            <function>HexSimDomain.ExpressionUpdaterFunction</function>
            <parameter>"Number of Fish [ steelhead ]"</parameter>
            <parameter>0</parameter>
          </updaterFunction>
          <!--Stratified Updater Functions Group 0-->
          <stratifiedUpdaterFunctions>
            <trait>Refuge Density Switch</trait>
            <trait>Number of Fish [ chinook ]</trait>
            <trait>Number of Fish [ steelhead ]</trait>
            <traitCombinations>0 0 0 0 0 0 1 0</traitCombinations>
            <updaterFunction>
              <accumulator>Fish to Retain [ chinook ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>"Effective Volume [ chinook ]" * 'Maximum Refuge Density'</parameter>
              <parameter>0</parameter>
            </updaterFunction>
            <updaterFunction>
              <accumulator>Fish to Retain [ chinook ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>Floor ( "Fish to Retain [ chinook ]" + 0.5 )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
          </stratifiedUpdaterFunctions>
          <!--Stratified Updater Functions Group 1-->
          <stratifiedUpdaterFunctions>
            <trait>Refuge Density Switch</trait>
            <trait>Number of Fish [ chinook ]</trait>
            <trait>Number of Fish [ steelhead ]</trait>
            <traitCombinations>0 0 0 0 0 1 0 0</traitCombinations>
            <updaterFunction>
              <accumulator>Fish to Retain [ steelhead ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>"Effective Volume [ steelhead ]" * 'Maximum Refuge Density'</parameter>
              <parameter>0</parameter>
            </updaterFunction>
            <updaterFunction>
              <accumulator>Fish to Retain [ steelhead ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>Floor ( "Fish to Retain [ steelhead ]" + 0.5 )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
          </stratifiedUpdaterFunctions>
          <!--Stratified Updater Functions Group 2-->
          <stratifiedUpdaterFunctions>
            <trait>Refuge Density Switch</trait>
            <trait>Number of Fish [ chinook ]</trait>
            <trait>Number of Fish [ steelhead ]</trait>
            <traitCombinations>0 0 0 0 0 0 0 1</traitCombinations>
            <updaterFunction>
              <accumulator>Fish to Retain [ chinook ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>'Maximum Refuge Density' * ( "Effective Volume [ chinook ]" * "Number of Fish [ chinook ]" / "Number of Fish [ steelhead ]" + "Effective Volume [ steelhead ]" )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
            <updaterFunction>
              <accumulator>Fish to Retain [ chinook ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>Floor ( "Fish to Retain [ chinook ]" + 0.5 )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
            <updaterFunction>
              <accumulator>Fish to Retain [ steelhead ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>'Maximum Refuge Density' * ( "Effective Volume [ chinook ]" + "Effective Volume [ steelhead ]" * "Number of Fish [ steelhead ]" / "Number of Fish [ chinook ]" )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
            <updaterFunction>
              <accumulator>Fish to Retain [ steelhead ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>Floor ( "Fish to Retain [ steelhead ]" + 0.5 )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
          </stratifiedUpdaterFunctions>
        </accumulateEvent>
      </event>
      <event>
        <accumulateEvent>
          <name>Get Numbers of Fish to Remove</name>
          <description />
          <qualifiedName>Accumulate ( Get Numbers of Fish to Remove )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Fish to Remove [ chinook ]</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
          <updaterFunction>
            <accumulator>Fish to Remove [ steelhead ]</accumulator>
            <function>HexSimDomain.ClearUpdaterFunction</function>
          </updaterFunction>
          <!--Stratified Updater Functions Group 0-->
          <stratifiedUpdaterFunctions>
            <trait>Refuge Density Switch</trait>
            <traitCombinations>0 1</traitCombinations>
            <updaterFunction>
              <accumulator>Fish to Remove [ chinook ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>Max ( 0 , "Number of Fish [ chinook ]" - "Fish to Retain [ chinook ]" )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
            <updaterFunction>
              <accumulator>Fish to Remove [ steelhead ]</accumulator>
              <function>HexSimDomain.ExpressionUpdaterFunction</function>
              <parameter>Max ( 0 , "Number of Fish [ steelhead ]" - "Fish to Retain [ steelhead ]" )</parameter>
              <parameter>0</parameter>
            </updaterFunction>
          </stratifiedUpdaterFunctions>
        </accumulateEvent>
      </event>
      <event>
        <interactionEvent>
          <name>Select Newcomers for Removal</name>
          <description />
          <qualifiedName>Interaction ( Select Newcomers for Removal )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <logParams logInteractionDeaths="true" />
          <presence>explored</presence>
          <colocation type="always" />
          <interaction>
            <name>Select Chinook</name>
            <populationName>Chinook</populationName>
            <presence>explored</presence>
            <colocation type="always" />
            <encounterProbability>1</encounterProbability>
            <outcomes>
              <p1Traits>
                <trait>Fish to Remove [ chinook ]</trait>
              </p1Traits>
              <p2Traits>
                <trait>Hours in Cold Water [ episodic ]</trait>
              </p2Traits>
              <outcome>
                <p1ComboIndex>1</p1ComboIndex>
                <p2ComboIndex>1</p2ComboIndex>
                <p1Changes>
                  <change accumulator="Fish to Remove [ chinook ]" updater="increment" value="-1" />
                  <change accumulator="Fish Removed [ chinook ]" updater="increment" value="1" />
                </p1Changes>
                <p2Changes>
                  <change accumulator="Fish Selector" updater="assign" value="1" />
                </p2Changes>
                <outcomeProbability>1</outcomeProbability>
              </outcome>
            </outcomes>
          </interaction>
          <interaction>
            <name>Select Steelhead</name>
            <populationName>Steelhead</populationName>
            <presence>explored</presence>
            <colocation type="always" />
            <encounterProbability>1</encounterProbability>
            <outcomes>
              <p1Traits>
                <trait>Fish to Remove [ steelhead ]</trait>
              </p1Traits>
              <p2Traits>
                <trait>Hours in Cold Water [ episodic ]</trait>
              </p2Traits>
              <outcome>
                <p1ComboIndex>1</p1ComboIndex>
                <p2ComboIndex>1</p2ComboIndex>
                <p1Changes>
                  <change accumulator="Fish to Remove [ steelhead ]" updater="increment" value="-1" />
                  <change accumulator="Fish Removed [ steelhead ]" updater="increment" value="1" />
                </p1Changes>
                <p2Changes>
                  <change accumulator="Fish Selector" updater="assign" value="1" />
                </p2Changes>
                <outcomeProbability>1</outcomeProbability>
              </outcome>
            </outcomes>
          </interaction>
        </interactionEvent>
      </event>
      <event>
        <interactionEvent>
          <name>Select Residents for Removal</name>
          <description />
          <qualifiedName>Interaction ( Select Residents for Removal )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Refuges</populationName>
          <permanent>false</permanent>
          <logParams logInteractionDeaths="true" />
          <presence>explored</presence>
          <colocation type="always" />
          <interaction>
            <name>Select Chinook</name>
            <populationName>Chinook</populationName>
            <presence>explored</presence>
            <colocation type="always" />
            <encounterProbability>1</encounterProbability>
            <outcomes>
              <p1Traits>
                <trait>Fish to Remove [ chinook ]</trait>
              </p1Traits>
              <p2Traits>
                <trait>Hours in Cold Water [ episodic ]</trait>
              </p2Traits>
              <outcome>
                <p1ComboIndex>1</p1ComboIndex>
                <p2ComboIndex>2</p2ComboIndex>
                <p1Changes>
                  <change accumulator="Fish to Remove [ chinook ]" updater="increment" value="-1" />
                  <change accumulator="Fish Removed [ chinook ]" updater="increment" value="1" />
                </p1Changes>
                <p2Changes>
                  <change accumulator="Fish Selector" updater="assign" value="1" />
                </p2Changes>
                <outcomeProbability>1</outcomeProbability>
              </outcome>
            </outcomes>
          </interaction>
          <interaction>
            <name>Select Steelhead</name>
            <populationName>Steelhead</populationName>
            <presence>explored</presence>
            <colocation type="always" />
            <encounterProbability>1</encounterProbability>
            <outcomes>
              <p1Traits>
                <trait>Fish to Remove [ steelhead ]</trait>
              </p1Traits>
              <p2Traits>
                <trait>Hours in Cold Water [ episodic ]</trait>
              </p2Traits>
              <outcome>
                <p1ComboIndex>1</p1ComboIndex>
                <p2ComboIndex>2</p2ComboIndex>
                <p1Changes>
                  <change accumulator="Fish to Remove [ steelhead ]" updater="increment" value="-1" />
                  <change accumulator="Fish Removed [ steelhead ]" updater="increment" value="1" />
                </p1Changes>
                <p2Changes>
                  <change accumulator="Fish Selector" updater="assign" value="1" />
                </p2Changes>
                <outcomeProbability>1</outcomeProbability>
              </outcome>
            </outcomes>
          </interaction>
        </interactionEvent>
      </event>
    </eventGroupEvent>
  </event>
  <event>
    <eventGroupEvent>
      <name>Perform Data Collection</name>
      <description />
      <qualifiedName>Event Group ( Perform Data Collection )</qualifiedName>
      <populationName />
      <permanent>false</permanent>
      <iterations>1</iterations>
      <event>
        <eventGroupEvent>
          <name>Record Trait Values</name>
          <description />
          <qualifiedName>Event Group ( Record Trait Values )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <censusEvent>
              <name>0  []  Movement Behavior [ chinook ]</name>
              <description />
              <qualifiedName>Census ( 0  []  Movement Behavior [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Fish Status [ movement ]</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>1  []  Movement Behavior [ steelhead ]</name>
              <description />
              <qualifiedName>Census ( 1  []  Movement Behavior [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Fish Status [ movement ]</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>2  []  Movement Status [ chinook ]</name>
              <description />
              <qualifiedName>Census ( 2  []  Movement Status [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Fish Status [ behavior ]</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>3  []  Movement Status [ steelhead ]</name>
              <description />
              <qualifiedName>Census ( 3  []  Movement Status [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Fish Status [ behavior ]</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>4  []  Thermal Status [ chinook ]</name>
              <description />
              <qualifiedName>Census ( 4  []  Thermal Status [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Fish Status [ thermal ]</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>5  []  Thermal Status [ steelhead ]</name>
              <description />
              <qualifiedName>Census ( 5  []  Thermal Status [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Fish Status [ thermal ]</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>6  []  Refuge ID [ chinook ]</name>
              <description />
              <qualifiedName>Census ( 6  []  Refuge ID [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Refuge ID</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>7  []  Refuge ID [ steelhead ]</name>
              <description />
              <qualifiedName>Census ( 7  []  Refuge ID [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Refuge ID</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>8  []  Trib and Plume ID [ chinook ]</name>
              <description />
              <qualifiedName>Census ( 8  []  Trib and Plume ID [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Trib and Plume ID</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>9  []  Trib and Plume ID [ steelhead ]</name>
              <description />
              <qualifiedName>Census ( 9  []  Trib and Plume ID [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Trib and Plume ID</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>10  []  Caught and Released [ chinook ]</name>
              <description />
              <qualifiedName>Census ( 10  []  Caught and Released [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Catch and Release [ switch ]</trait>
            </censusEvent>
          </event>
          <event>
            <censusEvent>
              <name>11  []  Caught and Released [ steelhead ]</name>
              <description />
              <qualifiedName>Census ( 11  []  Caught and Released [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <logParams logCensus="true" logCensusGenomes="false" />
              <trait>Catch and Release [ switch ]</trait>
            </censusEvent>
          </event>
        </eventGroupEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Record Accumulator Values</name>
          <description />
          <qualifiedName>Event Group ( Record Accumulator Values )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <dataProbeEvent>
              <name>Movement Iterators</name>
              <description />
              <qualifiedName>Data Probe ( Movement Iterators )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Iterator</populationName>
              <permanent>false</permanent>
              <trait>Termination Switch</trait>
              <traitCombinations>1 1</traitCombinations>
              <accumulator>Refuge Iterator [ chinook ]</accumulator>
              <accumulator>Refuge Iterator [ steelhead ]</accumulator>
              <accumulator>Downstream Iterator [ chinook ]</accumulator>
              <accumulator>Downstream Iterator [ steelhead ]</accumulator>
              <accumulator>Upstream Iterator [ chinook ]</accumulator>
              <accumulator>Upstream Iterator [ steelhead ]</accumulator>
            </dataProbeEvent>
          </event>
          <event>
            <dataProbeEvent>
              <name>Refuge-Specific Data</name>
              <description />
              <qualifiedName>Data Probe ( Refuge-Specific Data )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Refuges</populationName>
              <permanent>false</permanent>
              <trait>Refuge Occupancy</trait>
              <traitCombinations>0 1</traitCombinations>
              <accumulator>Refuge ID</accumulator>
              <accumulator>Refuge Depth [ chinook ]</accumulator>
              <accumulator>Refuge Depth [ steelhead ]</accumulator>
              <accumulator>Effective Volume [ chinook ]</accumulator>
              <accumulator>Effective Volume [ steelhead ]</accumulator>
              <accumulator>Current Refuge Density</accumulator>
              <accumulator>Fish to Retain [ chinook ]</accumulator>
              <accumulator>Fish to Retain [ steelhead ]</accumulator>
              <accumulator>Fish Removed [ chinook ]</accumulator>
              <accumulator>Fish Removed [ steelhead ]</accumulator>
            </dataProbeEvent>
          </event>
          <event>
            <dataProbeEvent>
              <name>Hourly Status Information [ chinook ]</name>
              <description />
              <qualifiedName>Data Probe ( Hourly Status Information [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <trait>Time [ at terminus ]</trait>
              <trait>Fish Status [ behavior ]</trait>
              <traitCombinations>0 1 0 0 0 1 0 0 0</traitCombinations>
              <accumulator>Time [ entry ]</accumulator>
              <accumulator>Time [ exit ]</accumulator>
              <accumulator>Time [ in system ]</accumulator>
              <accumulator>Time [ arrived at terminus ]</accumulator>
              <accumulator>River Kilometer</accumulator>
              <accumulator>Fish Status [ motivation ]</accumulator>
              <accumulator>Temperature [ at time 1 ]</accumulator>
              <accumulator>Temperature [ mean ]</accumulator>
              <accumulator>Fitness [ energy density ]</accumulator>
              <accumulator>Fitness [ weight ]</accumulator>
              <accumulator>Fitness [ energy ]</accumulator>
              <accumulator>Fish Selector</accumulator>
              <accumulator>Refuge Avoidance</accumulator>
              <accumulator>Hours in Cold Water [ episodic ]</accumulator>
              <accumulator>Hours in Cold Water [ total ]</accumulator>
              <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
            </dataProbeEvent>
          </event>
          <event>
            <dataProbeEvent>
              <name>Hourly Status Information [ steelhead ]</name>
              <description />
              <qualifiedName>Data Probe ( Hourly Status Information [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <trait>Time [ at terminus ]</trait>
              <trait>Fish Status [ behavior ]</trait>
              <traitCombinations>0 1 0 0 0 1 0 0 0</traitCombinations>
              <accumulator>Time [ entry ]</accumulator>
              <accumulator>Time [ exit ]</accumulator>
              <accumulator>Time [ in system ]</accumulator>
              <accumulator>Time [ arrived at terminus ]</accumulator>
              <accumulator>River Kilometer</accumulator>
              <accumulator>Fish Status [ motivation ]</accumulator>
              <accumulator>Temperature [ at time 1 ]</accumulator>
              <accumulator>Temperature [ mean ]</accumulator>
              <accumulator>Fitness [ energy density ]</accumulator>
              <accumulator>Fitness [ weight ]</accumulator>
              <accumulator>Fitness [ energy ]</accumulator>
              <accumulator>Fish Selector</accumulator>
              <accumulator>Refuge Avoidance</accumulator>
              <accumulator>Hours in Cold Water [ episodic ]</accumulator>
              <accumulator>Hours in Cold Water [ total ]</accumulator>
              <accumulator>Trib and Plume ID [ post-movement ]</accumulator>
            </dataProbeEvent>
          </event>
          <event>
            <dataProbeEvent>
              <name>Post-Visit Refuge Data [ chinook ]</name>
              <description />
              <qualifiedName>Data Probe ( Post-Visit Refuge Data [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <trait>Refuge History</trait>
              <trait>Time [ at terminus ]</trait>
              <traitCombinations>0 0 0 0 0 0 1 1 0 0 0 0</traitCombinations>
              <accumulator>Trib and Plume ID [ pre-movement ]</accumulator>
              <accumulator>Hours in Cold Water [ episodic ]</accumulator>
              <accumulator>Hours in Cold Water [ total ]</accumulator>
              <accumulator>Initial Weight</accumulator>
              <accumulator>Fitness [ energy density ]</accumulator>
              <accumulator>Energy Density [ used in refuge ]</accumulator>
            </dataProbeEvent>
          </event>
          <event>
            <dataProbeEvent>
              <name>Post-Visit Refuge Data [ steelhead ]</name>
              <description />
              <qualifiedName>Data Probe ( Post-Visit Refuge Data [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <trait>Refuge History</trait>
              <trait>Time [ at terminus ]</trait>
              <traitCombinations>0 0 0 0 0 0 1 1 0 0 0 0</traitCombinations>
              <accumulator>Trib and Plume ID [ pre-movement ]</accumulator>
              <accumulator>Hours in Cold Water [ episodic ]</accumulator>
              <accumulator>Hours in Cold Water [ total ]</accumulator>
              <accumulator>Initial Weight</accumulator>
              <accumulator>Fitness [ energy density ]</accumulator>
              <accumulator>Energy Density [ used in refuge ]</accumulator>
            </dataProbeEvent>
          </event>
          <event>
            <dataProbeEvent>
              <name>Condition at Terminus [ chinook ]</name>
              <description />
              <qualifiedName>Data Probe ( Condition at Terminus [ chinook ] )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <trait>Time [ at terminus ]</trait>
              <traitCombinations>0 1 0</traitCombinations>
              <accumulator>Time [ entry ]</accumulator>
              <accumulator>Time [ exit ]</accumulator>
              <accumulator>Time [ in system ]</accumulator>
              <accumulator>Time [ remaining ]</accumulator>
              <accumulator>Hours in Cold Water [ total ]</accumulator>
              <accumulator>Initial Weight</accumulator>
              <accumulator>Initial Energy Density</accumulator>
              <accumulator>Fitness [ weight ]</accumulator>
              <accumulator>Fitness [ energy density ]</accumulator>
              <accumulator>Fitness [ energy ]</accumulator>
            </dataProbeEvent>
          </event>
          <event>
            <dataProbeEvent>
              <name>Condition at Terminus [ steelhead ]</name>
              <description />
              <qualifiedName>Data Probe ( Condition at Terminus [ steelhead ] )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <trait>Time [ at terminus ]</trait>
              <traitCombinations>0 1 0</traitCombinations>
              <accumulator>Time [ entry ]</accumulator>
              <accumulator>Time [ exit ]</accumulator>
              <accumulator>Time [ in system ]</accumulator>
              <accumulator>Time [ remaining ]</accumulator>
              <accumulator>Hours in Cold Water [ total ]</accumulator>
              <accumulator>Initial Weight</accumulator>
              <accumulator>Initial Energy Density</accumulator>
              <accumulator>Fitness [ weight ]</accumulator>
              <accumulator>Fitness [ energy density ]</accumulator>
              <accumulator>Fitness [ energy ]</accumulator>
            </dataProbeEvent>
          </event>
        </eventGroupEvent>
      </event>
    </eventGroupEvent>
  </event>
  <event eventOff="True" initialTimestep="100" period="100">
    <eventGroupEvent>
      <name>Terminate Simulation</name>
      <description />
      <qualifiedName>Event Group ( Terminate Simulation )</qualifiedName>
      <populationName />
      <permanent>false</permanent>
      <iterations>1</iterations>
      <event>
        <accumulateEvent>
          <name>Set Locator [ chinook ]</name>
          <description />
          <qualifiedName>Accumulate ( Set Locator [ chinook ] )</qualifiedName>
          <populationName>Chinook</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Locator</accumulator>
            <function>HexSimDomain.ExpressionUpdaterFunction</function>
            <parameter>Cond ( "Fish Status [ terminus ]" , 0 , 1 )</parameter>
            <parameter>0</parameter>
          </updaterFunction>
        </accumulateEvent>
      </event>
      <event>
        <accumulateEvent>
          <name>Set Locator [ steelhead ]</name>
          <description />
          <qualifiedName>Accumulate ( Set Locator [ steelhead ] )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Steelhead</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Locator</accumulator>
            <function>HexSimDomain.ExpressionUpdaterFunction</function>
            <parameter>Cond ( "Fish Status [ terminus ]" , 0 , 1 )</parameter>
            <parameter>0</parameter>
          </updaterFunction>
        </accumulateEvent>
      </event>
      <event>
        <persistHexmapEvent>
          <name>Build Occupancy Map</name>
          <description />
          <qualifiedName>Generated Hexmap ( Build Occupancy Map )</qualifiedName>
          <populationName />
          <permanent>false</permanent>
          <hexmapName>Occupancy</hexmapName>
          <persistHexmapGenerator>
            <expression>h1 + h2</expression>
            <hexMapName>Chinook:accumulator:Locator</hexMapName>
            <hexMapName>Steelhead:accumulator:Locator</hexMapName>
          </persistHexmapGenerator>
          <saveFrequency>0</saveFrequency>
        </persistHexmapEvent>
      </event>
      <event>
        <accumulateEvent>
          <name>Set Termination Switch</name>
          <description />
          <qualifiedName>Accumulate ( Set Termination Switch )</qualifiedName>
          <displayColor>-1</displayColor>
          <populationName>Iterator</populationName>
          <permanent>false</permanent>
          <!--Global Updater Functions-->
          <updaterFunction>
            <accumulator>Termination Switch</accumulator>
            <function>HexSimDomain.HexPresenceUpdaterFunction</function>
            <accumulateSpatialData>Occupancy</accumulateSpatialData>
          </updaterFunction>
        </accumulateEvent>
      </event>
      <event>
        <eventGroupEvent>
          <name>Remove All Populations</name>
          <description />
          <qualifiedName>Event Group ( Remove All Populations )</qualifiedName>
          <populationName>Iterator</populationName>
          <permanent>false</permanent>
          <iterations>1</iterations>
          <event>
            <survivalEvent>
              <name>Remove Chinook</name>
              <description />
              <qualifiedName>Survival ( Remove Chinook )</qualifiedName>
              <populationName>Chinook</populationName>
              <permanent>false</permanent>
              <logParams logSurvival="true" logSurvivalDeaths="true" />
              <useAccumulator>false</useAccumulator>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>2</rows>
                <columns>1</columns>
                <matrices>
0
0
</matrices>
              </matrixSet>
              <trait>Fish Selector</trait>
            </survivalEvent>
          </event>
          <event>
            <survivalEvent>
              <name>Remove Steelhead</name>
              <description />
              <qualifiedName>Survival ( Remove Steelhead )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Steelhead</populationName>
              <permanent>false</permanent>
              <logParams logSurvival="true" logSurvivalDeaths="true" />
              <useAccumulator>false</useAccumulator>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>2</rows>
                <columns>1</columns>
                <matrices>
0
0
</matrices>
              </matrixSet>
              <trait>Fish Selector</trait>
            </survivalEvent>
          </event>
          <event>
            <survivalEvent>
              <name>Remove Refuges</name>
              <description />
              <qualifiedName>Survival ( Remove Refuges )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Refuges</populationName>
              <permanent>false</permanent>
              <logParams logSurvival="true" logSurvivalDeaths="true" />
              <useAccumulator>false</useAccumulator>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>2</rows>
                <columns>1</columns>
                <matrices>
0
0
</matrices>
              </matrixSet>
              <trait>Refuge Occupancy</trait>
            </survivalEvent>
          </event>
          <event>
            <survivalEvent>
              <name>Remove Iterator</name>
              <description />
              <qualifiedName>Survival ( Remove Iterator )</qualifiedName>
              <displayColor>-1</displayColor>
              <populationName>Iterator</populationName>
              <permanent>false</permanent>
              <logParams logSurvival="true" logSurvivalDeaths="true" />
              <useAccumulator>false</useAccumulator>
              <matrixSet transposed="false" rowsReversed="false">
                <matrixCount>1</matrixCount>
                <rows>2</rows>
                <columns>1</columns>
                <matrices>
0
0
</matrices>
              </matrixSet>
              <trait>Termination Switch</trait>
            </survivalEvent>
          </event>
          <traitCombinations>1 0</traitCombinations>
          <trait>Termination Switch</trait>
        </eventGroupEvent>
      </event>
    </eventGroupEvent>
  </event>
  <simulationParameters>
    <timesteps>2928</timesteps>
    <startLogStep>2929</startLogStep>
    <maxMatrices>1</maxMatrices>
    <matrixStochasticity>random</matrixStochasticity>
    <simulationLog>true</simulationLog>
  </simulationParameters>
  <workspace>D:\HexSim_Models\Fish Model</workspace>
  <hexagonGrid>
    <filename>D:\HexSim_Models\Fish Model\Fish Model.grid</filename>
    <hexCount>3261803</hexCount>
    <rows>1265</rows>
    <columns>2579</columns>
    <narrow>true</narrow>
    <hexagonWidth>24.0281</hexagonWidth>
    <north>26330.251745912741</north>
    <west>0</west>
  </hexagonGrid>
  <spatialDataSeries>
    <name>Gradient [ cold water ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Gradient [ distance to edge ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Gradient [ distance to refuges ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Gradient [ downstream ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Gradient [ upstream ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>River [ depth ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>River [ extent ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Special Sites [ initialization ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Special Sites [ refuges ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Special Sites [ terminus ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Special Sites [ tribs and plumes ]</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Study Area</name>
    <datatype>HexMap</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Effective Volume Map [ chinook ]</name>
    <datatype>Persisted</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Effective Volume Map [ steelhead ]</name>
    <datatype>Persisted</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Modified Depth Map [ chinook ]</name>
    <datatype>Persisted</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Modified Depth Map [ steelhead ]</name>
    <datatype>Persisted</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Modified Gradient Map [ downstream ]</name>
    <datatype>Persisted</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Modified Gradient Map [ edge ]</name>
    <datatype>Persisted</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Modified Gradient Map [ upstream ]</name>
    <datatype>Persisted</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <spatialDataSeries>
    <name>Occupancy</name>
    <datatype>Persisted</datatype>
    <timeSeries>1</timeSeries>
    <ignoredTimeSteps />
    <cycleLength>0</cycleLength>
  </spatialDataSeries>
  <globalVariables>
    <globalVariable Name="Hexagon Area" Value="500" />
    <globalVariable Name="Hexagon Width" Value="24.0281" />
    <globalVariable Name="River Kilometer [ JDD ]" Value="257" />
    <globalVariable Name="Latest Time of Entry" Value="2830" />
    <globalVariable Name="Refuge Hold Fraction [ chinook ]" Value="0.12" />
    <globalVariable Name="Refuge Hold Fraction [ steelhead ]" Value="0.9" />
    <globalVariable Name="Refuge Hold Max Hours [ chinook ]" Value="480" />
    <globalVariable Name="Refuge Hold Max Hours [ steelhead ]" Value="812" />
    <globalVariable Name="Refuge Avoidance Period [ chinook ]" Value="10" />
    <globalVariable Name="Refuge Avoidance Period [ steelhead ]" Value="10" />
    <globalVariable Name="Minimum Energy Density" Value="4000" />
    <globalVariable Name="Maximum Refuge Density" Value="0.018" />
    <globalVariable Name="Fish Respiration ACT" Value="9.7" />
    <globalVariable Name="Fish Respiration alpha" Value="0.00264" />
    <globalVariable Name="Fish Respiration BACT" Value="0.0405" />
    <globalVariable Name="Fish Respiration oxycalor" Value="13560" />
    <globalVariable Name="Fish Respiration RB" Value="-0.217" />
    <globalVariable Name="Fish Respiration RK4" Value="0.13" />
    <globalVariable Name="Fish Respiration RQ" Value="0.06818" />
    <globalVariable Name="Fish Respiration RTO" Value="0.0234" />
    <globalVariable Name="Edge Gradient Threshold" Value="26" />
    <globalVariable Name="Max CWR Detection Distance" Value="200" />
    <globalVariable Name="Minimum Depth [ chinook ]" Value="0.45" />
    <globalVariable Name="Minimum Depth [ steelhead ]" Value="0" />
    <globalVariable Name="Movement Distance [ gradient refuge ]" Value="10" />
    <globalVariable Name="Movement Distance [ gradient upstream ]" Value="10" />
    <globalVariable Name="Movement Distance [ gradient downstream ]" Value="10" />
    <globalVariable Name="Movement Distance [ upstream lower bound chinook ]" Value="75" />
    <globalVariable Name="Movement Distance [ upstream upper bound chinook ]" Value="150" />
    <globalVariable Name="Movement Distance [ upstream lower bound steelhead ]" Value="30" />
    <globalVariable Name="Movement Distance [ upstream upper bound steelhead ]" Value="90" />
    <globalVariable Name="Movement Distance [ downstream lower bound ]" Value="10" />
    <globalVariable Name="Movement Distance [ downstream upper bound ]" Value="10" />
    <globalVariable Name="Movement Distance [ random lower bound ]" Value="5" />
    <globalVariable Name="Movement Distance [ random upper bound ]" Value="10" />
    <globalVariable Name="Affinity Search Bounds [ cold water minimum ]" Value="100" />
    <globalVariable Name="Affinity Search Bounds [ cold water maximum ]" Value="500" />
    <globalVariable Name="Affinity Search Bounds [ upstream minimum ]" Value="100" />
    <globalVariable Name="Affinity Search Bounds [ upstream maximum ]" Value="500" />
    <globalVariable Name="Affinity Search Bounds [ downstream minimum ]" Value="100" />
    <globalVariable Name="Affinity Search Bounds [ downstream maximum ]" Value="500" />
  </globalVariables>
</scenario>